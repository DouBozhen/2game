// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: SchulteGrid.proto

#ifndef PROTOBUF_INCLUDED_SchulteGrid_2eproto
#define PROTOBUF_INCLUDED_SchulteGrid_2eproto

#include <string>

#include <google/protobuf/stubs/common.h>

#if GOOGLE_PROTOBUF_VERSION < 3006001
#error This file was generated by a newer version of protoc which is
#error incompatible with your Protocol Buffer headers.  Please update
#error your headers.
#endif
#if 3006001 < GOOGLE_PROTOBUF_MIN_PROTOC_VERSION
#error This file was generated by an older version of protoc which is
#error incompatible with your Protocol Buffer headers.  Please
#error regenerate this file with a newer version of protoc.
#endif

#include <google/protobuf/io/coded_stream.h>
#include <google/protobuf/arena.h>
#include <google/protobuf/arenastring.h>
#include <google/protobuf/generated_message_table_driven.h>
#include <google/protobuf/generated_message_util.h>
#include <google/protobuf/inlined_string_field.h>
#include <google/protobuf/metadata.h>
#include <google/protobuf/message.h>
#include <google/protobuf/repeated_field.h>  // IWYU pragma: export
#include <google/protobuf/extension_set.h>  // IWYU pragma: export
#include <google/protobuf/generated_enum_reflection.h>
#include <google/protobuf/unknown_field_set.h>
// @@protoc_insertion_point(includes)
#define PROTOBUF_INTERNAL_EXPORT_protobuf_SchulteGrid_2eproto 

namespace protobuf_SchulteGrid_2eproto {
// Internal implementation detail -- do not use these members.
struct TableStruct {
  static const ::google::protobuf::internal::ParseTableField entries[];
  static const ::google::protobuf::internal::AuxillaryParseTableField aux[];
  static const ::google::protobuf::internal::ParseTable schema[3];
  static const ::google::protobuf::internal::FieldMetadata field_metadata[];
  static const ::google::protobuf::internal::SerializationTable serialization_table[];
  static const ::google::protobuf::uint32 offsets[];
};
void AddDescriptors();
}  // namespace protobuf_SchulteGrid_2eproto
namespace SchulteGrid {
class Ubuntu2Unity;
class Ubuntu2UnityDefaultTypeInternal;
extern Ubuntu2UnityDefaultTypeInternal _Ubuntu2Unity_default_instance_;
class Unity2Ubuntu;
class Unity2UbuntuDefaultTypeInternal;
extern Unity2UbuntuDefaultTypeInternal _Unity2Ubuntu_default_instance_;
class Unity2Ubuntu_Point;
class Unity2Ubuntu_PointDefaultTypeInternal;
extern Unity2Ubuntu_PointDefaultTypeInternal _Unity2Ubuntu_Point_default_instance_;
}  // namespace SchulteGrid
namespace google {
namespace protobuf {
template<> ::SchulteGrid::Ubuntu2Unity* Arena::CreateMaybeMessage<::SchulteGrid::Ubuntu2Unity>(Arena*);
template<> ::SchulteGrid::Unity2Ubuntu* Arena::CreateMaybeMessage<::SchulteGrid::Unity2Ubuntu>(Arena*);
template<> ::SchulteGrid::Unity2Ubuntu_Point* Arena::CreateMaybeMessage<::SchulteGrid::Unity2Ubuntu_Point>(Arena*);
}  // namespace protobuf
}  // namespace google
namespace SchulteGrid {

enum Ubuntu2Unity_GameStateEnum {
  Ubuntu2Unity_GameStateEnum_gameing = 0,
  Ubuntu2Unity_GameStateEnum_game_win = 1,
  Ubuntu2Unity_GameStateEnum_game_lose = 2,
  Ubuntu2Unity_GameStateEnum_game_finish = 3,
  Ubuntu2Unity_GameStateEnum_Ubuntu2Unity_GameStateEnum_INT_MIN_SENTINEL_DO_NOT_USE_ = ::google::protobuf::kint32min,
  Ubuntu2Unity_GameStateEnum_Ubuntu2Unity_GameStateEnum_INT_MAX_SENTINEL_DO_NOT_USE_ = ::google::protobuf::kint32max
};
bool Ubuntu2Unity_GameStateEnum_IsValid(int value);
const Ubuntu2Unity_GameStateEnum Ubuntu2Unity_GameStateEnum_GameStateEnum_MIN = Ubuntu2Unity_GameStateEnum_gameing;
const Ubuntu2Unity_GameStateEnum Ubuntu2Unity_GameStateEnum_GameStateEnum_MAX = Ubuntu2Unity_GameStateEnum_game_finish;
const int Ubuntu2Unity_GameStateEnum_GameStateEnum_ARRAYSIZE = Ubuntu2Unity_GameStateEnum_GameStateEnum_MAX + 1;

const ::google::protobuf::EnumDescriptor* Ubuntu2Unity_GameStateEnum_descriptor();
inline const ::std::string& Ubuntu2Unity_GameStateEnum_Name(Ubuntu2Unity_GameStateEnum value) {
  return ::google::protobuf::internal::NameOfEnum(
    Ubuntu2Unity_GameStateEnum_descriptor(), value);
}
inline bool Ubuntu2Unity_GameStateEnum_Parse(
    const ::std::string& name, Ubuntu2Unity_GameStateEnum* value) {
  return ::google::protobuf::internal::ParseNamedEnum<Ubuntu2Unity_GameStateEnum>(
    Ubuntu2Unity_GameStateEnum_descriptor(), name, value);
}
enum Ubuntu2Unity_GameReplayEnum {
  Ubuntu2Unity_GameReplayEnum_game_ing = 0,
  Ubuntu2Unity_GameReplayEnum_game_back = 1,
  Ubuntu2Unity_GameReplayEnum_game_replay = 2,
  Ubuntu2Unity_GameReplayEnum_game_pause = 3,
  Ubuntu2Unity_GameReplayEnum_Ubuntu2Unity_GameReplayEnum_INT_MIN_SENTINEL_DO_NOT_USE_ = ::google::protobuf::kint32min,
  Ubuntu2Unity_GameReplayEnum_Ubuntu2Unity_GameReplayEnum_INT_MAX_SENTINEL_DO_NOT_USE_ = ::google::protobuf::kint32max
};
bool Ubuntu2Unity_GameReplayEnum_IsValid(int value);
const Ubuntu2Unity_GameReplayEnum Ubuntu2Unity_GameReplayEnum_GameReplayEnum_MIN = Ubuntu2Unity_GameReplayEnum_game_ing;
const Ubuntu2Unity_GameReplayEnum Ubuntu2Unity_GameReplayEnum_GameReplayEnum_MAX = Ubuntu2Unity_GameReplayEnum_game_pause;
const int Ubuntu2Unity_GameReplayEnum_GameReplayEnum_ARRAYSIZE = Ubuntu2Unity_GameReplayEnum_GameReplayEnum_MAX + 1;

const ::google::protobuf::EnumDescriptor* Ubuntu2Unity_GameReplayEnum_descriptor();
inline const ::std::string& Ubuntu2Unity_GameReplayEnum_Name(Ubuntu2Unity_GameReplayEnum value) {
  return ::google::protobuf::internal::NameOfEnum(
    Ubuntu2Unity_GameReplayEnum_descriptor(), value);
}
inline bool Ubuntu2Unity_GameReplayEnum_Parse(
    const ::std::string& name, Ubuntu2Unity_GameReplayEnum* value) {
  return ::google::protobuf::internal::ParseNamedEnum<Ubuntu2Unity_GameReplayEnum>(
    Ubuntu2Unity_GameReplayEnum_descriptor(), name, value);
}
enum Ubuntu2Unity_GameDeviceEnum {
  Ubuntu2Unity_GameDeviceEnum_vr = 0,
  Ubuntu2Unity_GameDeviceEnum_screen = 1,
  Ubuntu2Unity_GameDeviceEnum_Ubuntu2Unity_GameDeviceEnum_INT_MIN_SENTINEL_DO_NOT_USE_ = ::google::protobuf::kint32min,
  Ubuntu2Unity_GameDeviceEnum_Ubuntu2Unity_GameDeviceEnum_INT_MAX_SENTINEL_DO_NOT_USE_ = ::google::protobuf::kint32max
};
bool Ubuntu2Unity_GameDeviceEnum_IsValid(int value);
const Ubuntu2Unity_GameDeviceEnum Ubuntu2Unity_GameDeviceEnum_GameDeviceEnum_MIN = Ubuntu2Unity_GameDeviceEnum_vr;
const Ubuntu2Unity_GameDeviceEnum Ubuntu2Unity_GameDeviceEnum_GameDeviceEnum_MAX = Ubuntu2Unity_GameDeviceEnum_screen;
const int Ubuntu2Unity_GameDeviceEnum_GameDeviceEnum_ARRAYSIZE = Ubuntu2Unity_GameDeviceEnum_GameDeviceEnum_MAX + 1;

const ::google::protobuf::EnumDescriptor* Ubuntu2Unity_GameDeviceEnum_descriptor();
inline const ::std::string& Ubuntu2Unity_GameDeviceEnum_Name(Ubuntu2Unity_GameDeviceEnum value) {
  return ::google::protobuf::internal::NameOfEnum(
    Ubuntu2Unity_GameDeviceEnum_descriptor(), value);
}
inline bool Ubuntu2Unity_GameDeviceEnum_Parse(
    const ::std::string& name, Ubuntu2Unity_GameDeviceEnum* value) {
  return ::google::protobuf::internal::ParseNamedEnum<Ubuntu2Unity_GameDeviceEnum>(
    Ubuntu2Unity_GameDeviceEnum_descriptor(), name, value);
}
// ===================================================================

class Unity2Ubuntu_Point : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:SchulteGrid.Unity2Ubuntu.Point) */ {
 public:
  Unity2Ubuntu_Point();
  virtual ~Unity2Ubuntu_Point();

  Unity2Ubuntu_Point(const Unity2Ubuntu_Point& from);

  inline Unity2Ubuntu_Point& operator=(const Unity2Ubuntu_Point& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  Unity2Ubuntu_Point(Unity2Ubuntu_Point&& from) noexcept
    : Unity2Ubuntu_Point() {
    *this = ::std::move(from);
  }

  inline Unity2Ubuntu_Point& operator=(Unity2Ubuntu_Point&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const Unity2Ubuntu_Point& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const Unity2Ubuntu_Point* internal_default_instance() {
    return reinterpret_cast<const Unity2Ubuntu_Point*>(
               &_Unity2Ubuntu_Point_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    0;

  void Swap(Unity2Ubuntu_Point* other);
  friend void swap(Unity2Ubuntu_Point& a, Unity2Ubuntu_Point& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline Unity2Ubuntu_Point* New() const final {
    return CreateMaybeMessage<Unity2Ubuntu_Point>(NULL);
  }

  Unity2Ubuntu_Point* New(::google::protobuf::Arena* arena) const final {
    return CreateMaybeMessage<Unity2Ubuntu_Point>(arena);
  }
  void CopyFrom(const ::google::protobuf::Message& from) final;
  void MergeFrom(const ::google::protobuf::Message& from) final;
  void CopyFrom(const Unity2Ubuntu_Point& from);
  void MergeFrom(const Unity2Ubuntu_Point& from);
  void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) final;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const final;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(Unity2Ubuntu_Point* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // float x = 1;
  void clear_x();
  static const int kXFieldNumber = 1;
  float x() const;
  void set_x(float value);

  // float y = 2;
  void clear_y();
  static const int kYFieldNumber = 2;
  float y() const;
  void set_y(float value);

  // @@protoc_insertion_point(class_scope:SchulteGrid.Unity2Ubuntu.Point)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  float x_;
  float y_;
  mutable ::google::protobuf::internal::CachedSize _cached_size_;
  friend struct ::protobuf_SchulteGrid_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class Unity2Ubuntu : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:SchulteGrid.Unity2Ubuntu) */ {
 public:
  Unity2Ubuntu();
  virtual ~Unity2Ubuntu();

  Unity2Ubuntu(const Unity2Ubuntu& from);

  inline Unity2Ubuntu& operator=(const Unity2Ubuntu& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  Unity2Ubuntu(Unity2Ubuntu&& from) noexcept
    : Unity2Ubuntu() {
    *this = ::std::move(from);
  }

  inline Unity2Ubuntu& operator=(Unity2Ubuntu&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const Unity2Ubuntu& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const Unity2Ubuntu* internal_default_instance() {
    return reinterpret_cast<const Unity2Ubuntu*>(
               &_Unity2Ubuntu_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    1;

  void Swap(Unity2Ubuntu* other);
  friend void swap(Unity2Ubuntu& a, Unity2Ubuntu& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline Unity2Ubuntu* New() const final {
    return CreateMaybeMessage<Unity2Ubuntu>(NULL);
  }

  Unity2Ubuntu* New(::google::protobuf::Arena* arena) const final {
    return CreateMaybeMessage<Unity2Ubuntu>(arena);
  }
  void CopyFrom(const ::google::protobuf::Message& from) final;
  void MergeFrom(const ::google::protobuf::Message& from) final;
  void CopyFrom(const Unity2Ubuntu& from);
  void MergeFrom(const Unity2Ubuntu& from);
  void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) final;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const final;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(Unity2Ubuntu* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  typedef Unity2Ubuntu_Point Point;

  // accessors -------------------------------------------------------

  // repeated .SchulteGrid.Unity2Ubuntu.Point PointGrid = 1;
  int pointgrid_size() const;
  void clear_pointgrid();
  static const int kPointGridFieldNumber = 1;
  ::SchulteGrid::Unity2Ubuntu_Point* mutable_pointgrid(int index);
  ::google::protobuf::RepeatedPtrField< ::SchulteGrid::Unity2Ubuntu_Point >*
      mutable_pointgrid();
  const ::SchulteGrid::Unity2Ubuntu_Point& pointgrid(int index) const;
  ::SchulteGrid::Unity2Ubuntu_Point* add_pointgrid();
  const ::google::protobuf::RepeatedPtrField< ::SchulteGrid::Unity2Ubuntu_Point >&
      pointgrid() const;

  // .SchulteGrid.Unity2Ubuntu.Point PointOrigin = 2;
  bool has_pointorigin() const;
  void clear_pointorigin();
  static const int kPointOriginFieldNumber = 2;
  private:
  const ::SchulteGrid::Unity2Ubuntu_Point& _internal_pointorigin() const;
  public:
  const ::SchulteGrid::Unity2Ubuntu_Point& pointorigin() const;
  ::SchulteGrid::Unity2Ubuntu_Point* release_pointorigin();
  ::SchulteGrid::Unity2Ubuntu_Point* mutable_pointorigin();
  void set_allocated_pointorigin(::SchulteGrid::Unity2Ubuntu_Point* pointorigin);

  // int32 BackNum = 3;
  void clear_backnum();
  static const int kBackNumFieldNumber = 3;
  ::google::protobuf::int32 backnum() const;
  void set_backnum(::google::protobuf::int32 value);

  // int32 IsFinish = 4;
  void clear_isfinish();
  static const int kIsFinishFieldNumber = 4;
  ::google::protobuf::int32 isfinish() const;
  void set_isfinish(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:SchulteGrid.Unity2Ubuntu)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::RepeatedPtrField< ::SchulteGrid::Unity2Ubuntu_Point > pointgrid_;
  ::SchulteGrid::Unity2Ubuntu_Point* pointorigin_;
  ::google::protobuf::int32 backnum_;
  ::google::protobuf::int32 isfinish_;
  mutable ::google::protobuf::internal::CachedSize _cached_size_;
  friend struct ::protobuf_SchulteGrid_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class Ubuntu2Unity : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:SchulteGrid.Ubuntu2Unity) */ {
 public:
  Ubuntu2Unity();
  virtual ~Ubuntu2Unity();

  Ubuntu2Unity(const Ubuntu2Unity& from);

  inline Ubuntu2Unity& operator=(const Ubuntu2Unity& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  Ubuntu2Unity(Ubuntu2Unity&& from) noexcept
    : Ubuntu2Unity() {
    *this = ::std::move(from);
  }

  inline Ubuntu2Unity& operator=(Ubuntu2Unity&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const Ubuntu2Unity& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const Ubuntu2Unity* internal_default_instance() {
    return reinterpret_cast<const Ubuntu2Unity*>(
               &_Ubuntu2Unity_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    2;

  void Swap(Ubuntu2Unity* other);
  friend void swap(Ubuntu2Unity& a, Ubuntu2Unity& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline Ubuntu2Unity* New() const final {
    return CreateMaybeMessage<Ubuntu2Unity>(NULL);
  }

  Ubuntu2Unity* New(::google::protobuf::Arena* arena) const final {
    return CreateMaybeMessage<Ubuntu2Unity>(arena);
  }
  void CopyFrom(const ::google::protobuf::Message& from) final;
  void MergeFrom(const ::google::protobuf::Message& from) final;
  void CopyFrom(const Ubuntu2Unity& from);
  void MergeFrom(const Ubuntu2Unity& from);
  void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) final;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const final;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(Ubuntu2Unity* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  typedef Ubuntu2Unity_GameStateEnum GameStateEnum;
  static const GameStateEnum gameing =
    Ubuntu2Unity_GameStateEnum_gameing;
  static const GameStateEnum game_win =
    Ubuntu2Unity_GameStateEnum_game_win;
  static const GameStateEnum game_lose =
    Ubuntu2Unity_GameStateEnum_game_lose;
  static const GameStateEnum game_finish =
    Ubuntu2Unity_GameStateEnum_game_finish;
  static inline bool GameStateEnum_IsValid(int value) {
    return Ubuntu2Unity_GameStateEnum_IsValid(value);
  }
  static const GameStateEnum GameStateEnum_MIN =
    Ubuntu2Unity_GameStateEnum_GameStateEnum_MIN;
  static const GameStateEnum GameStateEnum_MAX =
    Ubuntu2Unity_GameStateEnum_GameStateEnum_MAX;
  static const int GameStateEnum_ARRAYSIZE =
    Ubuntu2Unity_GameStateEnum_GameStateEnum_ARRAYSIZE;
  static inline const ::google::protobuf::EnumDescriptor*
  GameStateEnum_descriptor() {
    return Ubuntu2Unity_GameStateEnum_descriptor();
  }
  static inline const ::std::string& GameStateEnum_Name(GameStateEnum value) {
    return Ubuntu2Unity_GameStateEnum_Name(value);
  }
  static inline bool GameStateEnum_Parse(const ::std::string& name,
      GameStateEnum* value) {
    return Ubuntu2Unity_GameStateEnum_Parse(name, value);
  }

  typedef Ubuntu2Unity_GameReplayEnum GameReplayEnum;
  static const GameReplayEnum game_ing =
    Ubuntu2Unity_GameReplayEnum_game_ing;
  static const GameReplayEnum game_back =
    Ubuntu2Unity_GameReplayEnum_game_back;
  static const GameReplayEnum game_replay =
    Ubuntu2Unity_GameReplayEnum_game_replay;
  static const GameReplayEnum game_pause =
    Ubuntu2Unity_GameReplayEnum_game_pause;
  static inline bool GameReplayEnum_IsValid(int value) {
    return Ubuntu2Unity_GameReplayEnum_IsValid(value);
  }
  static const GameReplayEnum GameReplayEnum_MIN =
    Ubuntu2Unity_GameReplayEnum_GameReplayEnum_MIN;
  static const GameReplayEnum GameReplayEnum_MAX =
    Ubuntu2Unity_GameReplayEnum_GameReplayEnum_MAX;
  static const int GameReplayEnum_ARRAYSIZE =
    Ubuntu2Unity_GameReplayEnum_GameReplayEnum_ARRAYSIZE;
  static inline const ::google::protobuf::EnumDescriptor*
  GameReplayEnum_descriptor() {
    return Ubuntu2Unity_GameReplayEnum_descriptor();
  }
  static inline const ::std::string& GameReplayEnum_Name(GameReplayEnum value) {
    return Ubuntu2Unity_GameReplayEnum_Name(value);
  }
  static inline bool GameReplayEnum_Parse(const ::std::string& name,
      GameReplayEnum* value) {
    return Ubuntu2Unity_GameReplayEnum_Parse(name, value);
  }

  typedef Ubuntu2Unity_GameDeviceEnum GameDeviceEnum;
  static const GameDeviceEnum vr =
    Ubuntu2Unity_GameDeviceEnum_vr;
  static const GameDeviceEnum screen =
    Ubuntu2Unity_GameDeviceEnum_screen;
  static inline bool GameDeviceEnum_IsValid(int value) {
    return Ubuntu2Unity_GameDeviceEnum_IsValid(value);
  }
  static const GameDeviceEnum GameDeviceEnum_MIN =
    Ubuntu2Unity_GameDeviceEnum_GameDeviceEnum_MIN;
  static const GameDeviceEnum GameDeviceEnum_MAX =
    Ubuntu2Unity_GameDeviceEnum_GameDeviceEnum_MAX;
  static const int GameDeviceEnum_ARRAYSIZE =
    Ubuntu2Unity_GameDeviceEnum_GameDeviceEnum_ARRAYSIZE;
  static inline const ::google::protobuf::EnumDescriptor*
  GameDeviceEnum_descriptor() {
    return Ubuntu2Unity_GameDeviceEnum_descriptor();
  }
  static inline const ::std::string& GameDeviceEnum_Name(GameDeviceEnum value) {
    return Ubuntu2Unity_GameDeviceEnum_Name(value);
  }
  static inline bool GameDeviceEnum_Parse(const ::std::string& name,
      GameDeviceEnum* value) {
    return Ubuntu2Unity_GameDeviceEnum_Parse(name, value);
  }

  // accessors -------------------------------------------------------

  // repeated float TCPGesture = 1;
  int tcpgesture_size() const;
  void clear_tcpgesture();
  static const int kTCPGestureFieldNumber = 1;
  float tcpgesture(int index) const;
  void set_tcpgesture(int index, float value);
  void add_tcpgesture(float value);
  const ::google::protobuf::RepeatedField< float >&
      tcpgesture() const;
  ::google::protobuf::RepeatedField< float >*
      mutable_tcpgesture();

  // int32 GridSize = 2;
  void clear_gridsize();
  static const int kGridSizeFieldNumber = 2;
  ::google::protobuf::int32 gridsize() const;
  void set_gridsize(::google::protobuf::int32 value);

  // .SchulteGrid.Ubuntu2Unity.GameStateEnum GameState = 3;
  void clear_gamestate();
  static const int kGameStateFieldNumber = 3;
  ::SchulteGrid::Ubuntu2Unity_GameStateEnum gamestate() const;
  void set_gamestate(::SchulteGrid::Ubuntu2Unity_GameStateEnum value);

  // float GameScore = 4;
  void clear_gamescore();
  static const int kGameScoreFieldNumber = 4;
  float gamescore() const;
  void set_gamescore(float value);

  // .SchulteGrid.Ubuntu2Unity.GameReplayEnum GameReplay = 5;
  void clear_gamereplay();
  static const int kGameReplayFieldNumber = 5;
  ::SchulteGrid::Ubuntu2Unity_GameReplayEnum gamereplay() const;
  void set_gamereplay(::SchulteGrid::Ubuntu2Unity_GameReplayEnum value);

  // .SchulteGrid.Ubuntu2Unity.GameDeviceEnum GameDevice = 6;
  void clear_gamedevice();
  static const int kGameDeviceFieldNumber = 6;
  ::SchulteGrid::Ubuntu2Unity_GameDeviceEnum gamedevice() const;
  void set_gamedevice(::SchulteGrid::Ubuntu2Unity_GameDeviceEnum value);

  // @@protoc_insertion_point(class_scope:SchulteGrid.Ubuntu2Unity)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::RepeatedField< float > tcpgesture_;
  mutable int _tcpgesture_cached_byte_size_;
  ::google::protobuf::int32 gridsize_;
  int gamestate_;
  float gamescore_;
  int gamereplay_;
  int gamedevice_;
  mutable ::google::protobuf::internal::CachedSize _cached_size_;
  friend struct ::protobuf_SchulteGrid_2eproto::TableStruct;
};
// ===================================================================


// ===================================================================

#ifdef __GNUC__
  #pragma GCC diagnostic push
  #pragma GCC diagnostic ignored "-Wstrict-aliasing"
#endif  // __GNUC__
// Unity2Ubuntu_Point

// float x = 1;
inline void Unity2Ubuntu_Point::clear_x() {
  x_ = 0;
}
inline float Unity2Ubuntu_Point::x() const {
  // @@protoc_insertion_point(field_get:SchulteGrid.Unity2Ubuntu.Point.x)
  return x_;
}
inline void Unity2Ubuntu_Point::set_x(float value) {
  
  x_ = value;
  // @@protoc_insertion_point(field_set:SchulteGrid.Unity2Ubuntu.Point.x)
}

// float y = 2;
inline void Unity2Ubuntu_Point::clear_y() {
  y_ = 0;
}
inline float Unity2Ubuntu_Point::y() const {
  // @@protoc_insertion_point(field_get:SchulteGrid.Unity2Ubuntu.Point.y)
  return y_;
}
inline void Unity2Ubuntu_Point::set_y(float value) {
  
  y_ = value;
  // @@protoc_insertion_point(field_set:SchulteGrid.Unity2Ubuntu.Point.y)
}

// -------------------------------------------------------------------

// Unity2Ubuntu

// repeated .SchulteGrid.Unity2Ubuntu.Point PointGrid = 1;
inline int Unity2Ubuntu::pointgrid_size() const {
  return pointgrid_.size();
}
inline void Unity2Ubuntu::clear_pointgrid() {
  pointgrid_.Clear();
}
inline ::SchulteGrid::Unity2Ubuntu_Point* Unity2Ubuntu::mutable_pointgrid(int index) {
  // @@protoc_insertion_point(field_mutable:SchulteGrid.Unity2Ubuntu.PointGrid)
  return pointgrid_.Mutable(index);
}
inline ::google::protobuf::RepeatedPtrField< ::SchulteGrid::Unity2Ubuntu_Point >*
Unity2Ubuntu::mutable_pointgrid() {
  // @@protoc_insertion_point(field_mutable_list:SchulteGrid.Unity2Ubuntu.PointGrid)
  return &pointgrid_;
}
inline const ::SchulteGrid::Unity2Ubuntu_Point& Unity2Ubuntu::pointgrid(int index) const {
  // @@protoc_insertion_point(field_get:SchulteGrid.Unity2Ubuntu.PointGrid)
  return pointgrid_.Get(index);
}
inline ::SchulteGrid::Unity2Ubuntu_Point* Unity2Ubuntu::add_pointgrid() {
  // @@protoc_insertion_point(field_add:SchulteGrid.Unity2Ubuntu.PointGrid)
  return pointgrid_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::SchulteGrid::Unity2Ubuntu_Point >&
Unity2Ubuntu::pointgrid() const {
  // @@protoc_insertion_point(field_list:SchulteGrid.Unity2Ubuntu.PointGrid)
  return pointgrid_;
}

// .SchulteGrid.Unity2Ubuntu.Point PointOrigin = 2;
inline bool Unity2Ubuntu::has_pointorigin() const {
  return this != internal_default_instance() && pointorigin_ != NULL;
}
inline void Unity2Ubuntu::clear_pointorigin() {
  if (GetArenaNoVirtual() == NULL && pointorigin_ != NULL) {
    delete pointorigin_;
  }
  pointorigin_ = NULL;
}
inline const ::SchulteGrid::Unity2Ubuntu_Point& Unity2Ubuntu::_internal_pointorigin() const {
  return *pointorigin_;
}
inline const ::SchulteGrid::Unity2Ubuntu_Point& Unity2Ubuntu::pointorigin() const {
  const ::SchulteGrid::Unity2Ubuntu_Point* p = pointorigin_;
  // @@protoc_insertion_point(field_get:SchulteGrid.Unity2Ubuntu.PointOrigin)
  return p != NULL ? *p : *reinterpret_cast<const ::SchulteGrid::Unity2Ubuntu_Point*>(
      &::SchulteGrid::_Unity2Ubuntu_Point_default_instance_);
}
inline ::SchulteGrid::Unity2Ubuntu_Point* Unity2Ubuntu::release_pointorigin() {
  // @@protoc_insertion_point(field_release:SchulteGrid.Unity2Ubuntu.PointOrigin)
  
  ::SchulteGrid::Unity2Ubuntu_Point* temp = pointorigin_;
  pointorigin_ = NULL;
  return temp;
}
inline ::SchulteGrid::Unity2Ubuntu_Point* Unity2Ubuntu::mutable_pointorigin() {
  
  if (pointorigin_ == NULL) {
    auto* p = CreateMaybeMessage<::SchulteGrid::Unity2Ubuntu_Point>(GetArenaNoVirtual());
    pointorigin_ = p;
  }
  // @@protoc_insertion_point(field_mutable:SchulteGrid.Unity2Ubuntu.PointOrigin)
  return pointorigin_;
}
inline void Unity2Ubuntu::set_allocated_pointorigin(::SchulteGrid::Unity2Ubuntu_Point* pointorigin) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  if (message_arena == NULL) {
    delete pointorigin_;
  }
  if (pointorigin) {
    ::google::protobuf::Arena* submessage_arena = NULL;
    if (message_arena != submessage_arena) {
      pointorigin = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, pointorigin, submessage_arena);
    }
    
  } else {
    
  }
  pointorigin_ = pointorigin;
  // @@protoc_insertion_point(field_set_allocated:SchulteGrid.Unity2Ubuntu.PointOrigin)
}

// int32 BackNum = 3;
inline void Unity2Ubuntu::clear_backnum() {
  backnum_ = 0;
}
inline ::google::protobuf::int32 Unity2Ubuntu::backnum() const {
  // @@protoc_insertion_point(field_get:SchulteGrid.Unity2Ubuntu.BackNum)
  return backnum_;
}
inline void Unity2Ubuntu::set_backnum(::google::protobuf::int32 value) {
  
  backnum_ = value;
  // @@protoc_insertion_point(field_set:SchulteGrid.Unity2Ubuntu.BackNum)
}

// int32 IsFinish = 4;
inline void Unity2Ubuntu::clear_isfinish() {
  isfinish_ = 0;
}
inline ::google::protobuf::int32 Unity2Ubuntu::isfinish() const {
  // @@protoc_insertion_point(field_get:SchulteGrid.Unity2Ubuntu.IsFinish)
  return isfinish_;
}
inline void Unity2Ubuntu::set_isfinish(::google::protobuf::int32 value) {
  
  isfinish_ = value;
  // @@protoc_insertion_point(field_set:SchulteGrid.Unity2Ubuntu.IsFinish)
}

// -------------------------------------------------------------------

// Ubuntu2Unity

// repeated float TCPGesture = 1;
inline int Ubuntu2Unity::tcpgesture_size() const {
  return tcpgesture_.size();
}
inline void Ubuntu2Unity::clear_tcpgesture() {
  tcpgesture_.Clear();
}
inline float Ubuntu2Unity::tcpgesture(int index) const {
  // @@protoc_insertion_point(field_get:SchulteGrid.Ubuntu2Unity.TCPGesture)
  return tcpgesture_.Get(index);
}
inline void Ubuntu2Unity::set_tcpgesture(int index, float value) {
  tcpgesture_.Set(index, value);
  // @@protoc_insertion_point(field_set:SchulteGrid.Ubuntu2Unity.TCPGesture)
}
inline void Ubuntu2Unity::add_tcpgesture(float value) {
  tcpgesture_.Add(value);
  // @@protoc_insertion_point(field_add:SchulteGrid.Ubuntu2Unity.TCPGesture)
}
inline const ::google::protobuf::RepeatedField< float >&
Ubuntu2Unity::tcpgesture() const {
  // @@protoc_insertion_point(field_list:SchulteGrid.Ubuntu2Unity.TCPGesture)
  return tcpgesture_;
}
inline ::google::protobuf::RepeatedField< float >*
Ubuntu2Unity::mutable_tcpgesture() {
  // @@protoc_insertion_point(field_mutable_list:SchulteGrid.Ubuntu2Unity.TCPGesture)
  return &tcpgesture_;
}

// int32 GridSize = 2;
inline void Ubuntu2Unity::clear_gridsize() {
  gridsize_ = 0;
}
inline ::google::protobuf::int32 Ubuntu2Unity::gridsize() const {
  // @@protoc_insertion_point(field_get:SchulteGrid.Ubuntu2Unity.GridSize)
  return gridsize_;
}
inline void Ubuntu2Unity::set_gridsize(::google::protobuf::int32 value) {
  
  gridsize_ = value;
  // @@protoc_insertion_point(field_set:SchulteGrid.Ubuntu2Unity.GridSize)
}

// .SchulteGrid.Ubuntu2Unity.GameStateEnum GameState = 3;
inline void Ubuntu2Unity::clear_gamestate() {
  gamestate_ = 0;
}
inline ::SchulteGrid::Ubuntu2Unity_GameStateEnum Ubuntu2Unity::gamestate() const {
  // @@protoc_insertion_point(field_get:SchulteGrid.Ubuntu2Unity.GameState)
  return static_cast< ::SchulteGrid::Ubuntu2Unity_GameStateEnum >(gamestate_);
}
inline void Ubuntu2Unity::set_gamestate(::SchulteGrid::Ubuntu2Unity_GameStateEnum value) {
  
  gamestate_ = value;
  // @@protoc_insertion_point(field_set:SchulteGrid.Ubuntu2Unity.GameState)
}

// float GameScore = 4;
inline void Ubuntu2Unity::clear_gamescore() {
  gamescore_ = 0;
}
inline float Ubuntu2Unity::gamescore() const {
  // @@protoc_insertion_point(field_get:SchulteGrid.Ubuntu2Unity.GameScore)
  return gamescore_;
}
inline void Ubuntu2Unity::set_gamescore(float value) {
  
  gamescore_ = value;
  // @@protoc_insertion_point(field_set:SchulteGrid.Ubuntu2Unity.GameScore)
}

// .SchulteGrid.Ubuntu2Unity.GameReplayEnum GameReplay = 5;
inline void Ubuntu2Unity::clear_gamereplay() {
  gamereplay_ = 0;
}
inline ::SchulteGrid::Ubuntu2Unity_GameReplayEnum Ubuntu2Unity::gamereplay() const {
  // @@protoc_insertion_point(field_get:SchulteGrid.Ubuntu2Unity.GameReplay)
  return static_cast< ::SchulteGrid::Ubuntu2Unity_GameReplayEnum >(gamereplay_);
}
inline void Ubuntu2Unity::set_gamereplay(::SchulteGrid::Ubuntu2Unity_GameReplayEnum value) {
  
  gamereplay_ = value;
  // @@protoc_insertion_point(field_set:SchulteGrid.Ubuntu2Unity.GameReplay)
}

// .SchulteGrid.Ubuntu2Unity.GameDeviceEnum GameDevice = 6;
inline void Ubuntu2Unity::clear_gamedevice() {
  gamedevice_ = 0;
}
inline ::SchulteGrid::Ubuntu2Unity_GameDeviceEnum Ubuntu2Unity::gamedevice() const {
  // @@protoc_insertion_point(field_get:SchulteGrid.Ubuntu2Unity.GameDevice)
  return static_cast< ::SchulteGrid::Ubuntu2Unity_GameDeviceEnum >(gamedevice_);
}
inline void Ubuntu2Unity::set_gamedevice(::SchulteGrid::Ubuntu2Unity_GameDeviceEnum value) {
  
  gamedevice_ = value;
  // @@protoc_insertion_point(field_set:SchulteGrid.Ubuntu2Unity.GameDevice)
}

#ifdef __GNUC__
  #pragma GCC diagnostic pop
#endif  // __GNUC__
// -------------------------------------------------------------------

// -------------------------------------------------------------------


// @@protoc_insertion_point(namespace_scope)

}  // namespace SchulteGrid

namespace google {
namespace protobuf {

template <> struct is_proto_enum< ::SchulteGrid::Ubuntu2Unity_GameStateEnum> : ::std::true_type {};
template <>
inline const EnumDescriptor* GetEnumDescriptor< ::SchulteGrid::Ubuntu2Unity_GameStateEnum>() {
  return ::SchulteGrid::Ubuntu2Unity_GameStateEnum_descriptor();
}
template <> struct is_proto_enum< ::SchulteGrid::Ubuntu2Unity_GameReplayEnum> : ::std::true_type {};
template <>
inline const EnumDescriptor* GetEnumDescriptor< ::SchulteGrid::Ubuntu2Unity_GameReplayEnum>() {
  return ::SchulteGrid::Ubuntu2Unity_GameReplayEnum_descriptor();
}
template <> struct is_proto_enum< ::SchulteGrid::Ubuntu2Unity_GameDeviceEnum> : ::std::true_type {};
template <>
inline const EnumDescriptor* GetEnumDescriptor< ::SchulteGrid::Ubuntu2Unity_GameDeviceEnum>() {
  return ::SchulteGrid::Ubuntu2Unity_GameDeviceEnum_descriptor();
}

}  // namespace protobuf
}  // namespace google

// @@protoc_insertion_point(global_scope)

#endif  // PROTOBUF_INCLUDED_SchulteGrid_2eproto
