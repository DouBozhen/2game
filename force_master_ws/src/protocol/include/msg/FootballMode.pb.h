// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: FootballMode.proto

#ifndef PROTOBUF_INCLUDED_FootballMode_2eproto
#define PROTOBUF_INCLUDED_FootballMode_2eproto

#include <string>

#include <google/protobuf/stubs/common.h>

#if GOOGLE_PROTOBUF_VERSION < 3006001
#error This file was generated by a newer version of protoc which is
#error incompatible with your Protocol Buffer headers.  Please update
#error your headers.
#endif
#if 3006001 < GOOGLE_PROTOBUF_MIN_PROTOC_VERSION
#error This file was generated by an older version of protoc which is
#error incompatible with your Protocol Buffer headers.  Please
#error regenerate this file with a newer version of protoc.
#endif

#include <google/protobuf/io/coded_stream.h>
#include <google/protobuf/arena.h>
#include <google/protobuf/arenastring.h>
#include <google/protobuf/generated_message_table_driven.h>
#include <google/protobuf/generated_message_util.h>
#include <google/protobuf/inlined_string_field.h>
#include <google/protobuf/metadata.h>
#include <google/protobuf/message.h>
#include <google/protobuf/repeated_field.h>  // IWYU pragma: export
#include <google/protobuf/extension_set.h>  // IWYU pragma: export
#include <google/protobuf/generated_enum_reflection.h>
#include <google/protobuf/unknown_field_set.h>
#include "GameMode.pb.h"
// @@protoc_insertion_point(includes)
#define PROTOBUF_INTERNAL_EXPORT_protobuf_FootballMode_2eproto 

namespace protobuf_FootballMode_2eproto {
// Internal implementation detail -- do not use these members.
struct TableStruct {
  static const ::google::protobuf::internal::ParseTableField entries[];
  static const ::google::protobuf::internal::AuxillaryParseTableField aux[];
  static const ::google::protobuf::internal::ParseTable schema[2];
  static const ::google::protobuf::internal::FieldMetadata field_metadata[];
  static const ::google::protobuf::internal::SerializationTable serialization_table[];
  static const ::google::protobuf::uint32 offsets[];
};
void AddDescriptors();
}  // namespace protobuf_FootballMode_2eproto
namespace FootballParameter {
class Ubuntu2Unity;
class Ubuntu2UnityDefaultTypeInternal;
extern Ubuntu2UnityDefaultTypeInternal _Ubuntu2Unity_default_instance_;
class Unity2Ubuntu;
class Unity2UbuntuDefaultTypeInternal;
extern Unity2UbuntuDefaultTypeInternal _Unity2Ubuntu_default_instance_;
}  // namespace FootballParameter
namespace google {
namespace protobuf {
template<> ::FootballParameter::Ubuntu2Unity* Arena::CreateMaybeMessage<::FootballParameter::Ubuntu2Unity>(Arena*);
template<> ::FootballParameter::Unity2Ubuntu* Arena::CreateMaybeMessage<::FootballParameter::Unity2Ubuntu>(Arena*);
}  // namespace protobuf
}  // namespace google
namespace FootballParameter {

enum Ubuntu2Unity_DataRequireEnum {
  Ubuntu2Unity_DataRequireEnum_data_not_require = 0,
  Ubuntu2Unity_DataRequireEnum_data_require = 1,
  Ubuntu2Unity_DataRequireEnum_Ubuntu2Unity_DataRequireEnum_INT_MIN_SENTINEL_DO_NOT_USE_ = ::google::protobuf::kint32min,
  Ubuntu2Unity_DataRequireEnum_Ubuntu2Unity_DataRequireEnum_INT_MAX_SENTINEL_DO_NOT_USE_ = ::google::protobuf::kint32max
};
bool Ubuntu2Unity_DataRequireEnum_IsValid(int value);
const Ubuntu2Unity_DataRequireEnum Ubuntu2Unity_DataRequireEnum_DataRequireEnum_MIN = Ubuntu2Unity_DataRequireEnum_data_not_require;
const Ubuntu2Unity_DataRequireEnum Ubuntu2Unity_DataRequireEnum_DataRequireEnum_MAX = Ubuntu2Unity_DataRequireEnum_data_require;
const int Ubuntu2Unity_DataRequireEnum_DataRequireEnum_ARRAYSIZE = Ubuntu2Unity_DataRequireEnum_DataRequireEnum_MAX + 1;

const ::google::protobuf::EnumDescriptor* Ubuntu2Unity_DataRequireEnum_descriptor();
inline const ::std::string& Ubuntu2Unity_DataRequireEnum_Name(Ubuntu2Unity_DataRequireEnum value) {
  return ::google::protobuf::internal::NameOfEnum(
    Ubuntu2Unity_DataRequireEnum_descriptor(), value);
}
inline bool Ubuntu2Unity_DataRequireEnum_Parse(
    const ::std::string& name, Ubuntu2Unity_DataRequireEnum* value) {
  return ::google::protobuf::internal::ParseNamedEnum<Ubuntu2Unity_DataRequireEnum>(
    Ubuntu2Unity_DataRequireEnum_descriptor(), name, value);
}
// ===================================================================

class Unity2Ubuntu : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:FootballParameter.Unity2Ubuntu) */ {
 public:
  Unity2Ubuntu();
  virtual ~Unity2Ubuntu();

  Unity2Ubuntu(const Unity2Ubuntu& from);

  inline Unity2Ubuntu& operator=(const Unity2Ubuntu& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  Unity2Ubuntu(Unity2Ubuntu&& from) noexcept
    : Unity2Ubuntu() {
    *this = ::std::move(from);
  }

  inline Unity2Ubuntu& operator=(Unity2Ubuntu&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const Unity2Ubuntu& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const Unity2Ubuntu* internal_default_instance() {
    return reinterpret_cast<const Unity2Ubuntu*>(
               &_Unity2Ubuntu_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    0;

  void Swap(Unity2Ubuntu* other);
  friend void swap(Unity2Ubuntu& a, Unity2Ubuntu& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline Unity2Ubuntu* New() const final {
    return CreateMaybeMessage<Unity2Ubuntu>(NULL);
  }

  Unity2Ubuntu* New(::google::protobuf::Arena* arena) const final {
    return CreateMaybeMessage<Unity2Ubuntu>(arena);
  }
  void CopyFrom(const ::google::protobuf::Message& from) final;
  void MergeFrom(const ::google::protobuf::Message& from) final;
  void CopyFrom(const Unity2Ubuntu& from);
  void MergeFrom(const Unity2Ubuntu& from);
  void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) final;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const final;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(Unity2Ubuntu* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // .game_mode FootballMode = 1;
  void clear_footballmode();
  static const int kFootballModeFieldNumber = 1;
  ::game_mode footballmode() const;
  void set_footballmode(::game_mode value);

  // float FootballModeParameter = 2;
  void clear_footballmodeparameter();
  static const int kFootballModeParameterFieldNumber = 2;
  float footballmodeparameter() const;
  void set_footballmodeparameter(float value);

  // float ChannelWidth = 3;
  void clear_channelwidth();
  static const int kChannelWidthFieldNumber = 3;
  float channelwidth() const;
  void set_channelwidth(float value);

  // @@protoc_insertion_point(class_scope:FootballParameter.Unity2Ubuntu)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  int footballmode_;
  float footballmodeparameter_;
  float channelwidth_;
  mutable ::google::protobuf::internal::CachedSize _cached_size_;
  friend struct ::protobuf_FootballMode_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class Ubuntu2Unity : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:FootballParameter.Ubuntu2Unity) */ {
 public:
  Ubuntu2Unity();
  virtual ~Ubuntu2Unity();

  Ubuntu2Unity(const Ubuntu2Unity& from);

  inline Ubuntu2Unity& operator=(const Ubuntu2Unity& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  Ubuntu2Unity(Ubuntu2Unity&& from) noexcept
    : Ubuntu2Unity() {
    *this = ::std::move(from);
  }

  inline Ubuntu2Unity& operator=(Ubuntu2Unity&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const Ubuntu2Unity& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const Ubuntu2Unity* internal_default_instance() {
    return reinterpret_cast<const Ubuntu2Unity*>(
               &_Ubuntu2Unity_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    1;

  void Swap(Ubuntu2Unity* other);
  friend void swap(Ubuntu2Unity& a, Ubuntu2Unity& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline Ubuntu2Unity* New() const final {
    return CreateMaybeMessage<Ubuntu2Unity>(NULL);
  }

  Ubuntu2Unity* New(::google::protobuf::Arena* arena) const final {
    return CreateMaybeMessage<Ubuntu2Unity>(arena);
  }
  void CopyFrom(const ::google::protobuf::Message& from) final;
  void MergeFrom(const ::google::protobuf::Message& from) final;
  void CopyFrom(const Ubuntu2Unity& from);
  void MergeFrom(const Ubuntu2Unity& from);
  void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) final;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const final;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(Ubuntu2Unity* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  typedef Ubuntu2Unity_DataRequireEnum DataRequireEnum;
  static const DataRequireEnum data_not_require =
    Ubuntu2Unity_DataRequireEnum_data_not_require;
  static const DataRequireEnum data_require =
    Ubuntu2Unity_DataRequireEnum_data_require;
  static inline bool DataRequireEnum_IsValid(int value) {
    return Ubuntu2Unity_DataRequireEnum_IsValid(value);
  }
  static const DataRequireEnum DataRequireEnum_MIN =
    Ubuntu2Unity_DataRequireEnum_DataRequireEnum_MIN;
  static const DataRequireEnum DataRequireEnum_MAX =
    Ubuntu2Unity_DataRequireEnum_DataRequireEnum_MAX;
  static const int DataRequireEnum_ARRAYSIZE =
    Ubuntu2Unity_DataRequireEnum_DataRequireEnum_ARRAYSIZE;
  static inline const ::google::protobuf::EnumDescriptor*
  DataRequireEnum_descriptor() {
    return Ubuntu2Unity_DataRequireEnum_descriptor();
  }
  static inline const ::std::string& DataRequireEnum_Name(DataRequireEnum value) {
    return Ubuntu2Unity_DataRequireEnum_Name(value);
  }
  static inline bool DataRequireEnum_Parse(const ::std::string& name,
      DataRequireEnum* value) {
    return Ubuntu2Unity_DataRequireEnum_Parse(name, value);
  }

  // accessors -------------------------------------------------------

  // .FootballParameter.Ubuntu2Unity.DataRequireEnum DataRequire = 1;
  void clear_datarequire();
  static const int kDataRequireFieldNumber = 1;
  ::FootballParameter::Ubuntu2Unity_DataRequireEnum datarequire() const;
  void set_datarequire(::FootballParameter::Ubuntu2Unity_DataRequireEnum value);

  // @@protoc_insertion_point(class_scope:FootballParameter.Ubuntu2Unity)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  int datarequire_;
  mutable ::google::protobuf::internal::CachedSize _cached_size_;
  friend struct ::protobuf_FootballMode_2eproto::TableStruct;
};
// ===================================================================


// ===================================================================

#ifdef __GNUC__
  #pragma GCC diagnostic push
  #pragma GCC diagnostic ignored "-Wstrict-aliasing"
#endif  // __GNUC__
// Unity2Ubuntu

// .game_mode FootballMode = 1;
inline void Unity2Ubuntu::clear_footballmode() {
  footballmode_ = 0;
}
inline ::game_mode Unity2Ubuntu::footballmode() const {
  // @@protoc_insertion_point(field_get:FootballParameter.Unity2Ubuntu.FootballMode)
  return static_cast< ::game_mode >(footballmode_);
}
inline void Unity2Ubuntu::set_footballmode(::game_mode value) {
  
  footballmode_ = value;
  // @@protoc_insertion_point(field_set:FootballParameter.Unity2Ubuntu.FootballMode)
}

// float FootballModeParameter = 2;
inline void Unity2Ubuntu::clear_footballmodeparameter() {
  footballmodeparameter_ = 0;
}
inline float Unity2Ubuntu::footballmodeparameter() const {
  // @@protoc_insertion_point(field_get:FootballParameter.Unity2Ubuntu.FootballModeParameter)
  return footballmodeparameter_;
}
inline void Unity2Ubuntu::set_footballmodeparameter(float value) {
  
  footballmodeparameter_ = value;
  // @@protoc_insertion_point(field_set:FootballParameter.Unity2Ubuntu.FootballModeParameter)
}

// float ChannelWidth = 3;
inline void Unity2Ubuntu::clear_channelwidth() {
  channelwidth_ = 0;
}
inline float Unity2Ubuntu::channelwidth() const {
  // @@protoc_insertion_point(field_get:FootballParameter.Unity2Ubuntu.ChannelWidth)
  return channelwidth_;
}
inline void Unity2Ubuntu::set_channelwidth(float value) {
  
  channelwidth_ = value;
  // @@protoc_insertion_point(field_set:FootballParameter.Unity2Ubuntu.ChannelWidth)
}

// -------------------------------------------------------------------

// Ubuntu2Unity

// .FootballParameter.Ubuntu2Unity.DataRequireEnum DataRequire = 1;
inline void Ubuntu2Unity::clear_datarequire() {
  datarequire_ = 0;
}
inline ::FootballParameter::Ubuntu2Unity_DataRequireEnum Ubuntu2Unity::datarequire() const {
  // @@protoc_insertion_point(field_get:FootballParameter.Ubuntu2Unity.DataRequire)
  return static_cast< ::FootballParameter::Ubuntu2Unity_DataRequireEnum >(datarequire_);
}
inline void Ubuntu2Unity::set_datarequire(::FootballParameter::Ubuntu2Unity_DataRequireEnum value) {
  
  datarequire_ = value;
  // @@protoc_insertion_point(field_set:FootballParameter.Ubuntu2Unity.DataRequire)
}

#ifdef __GNUC__
  #pragma GCC diagnostic pop
#endif  // __GNUC__
// -------------------------------------------------------------------


// @@protoc_insertion_point(namespace_scope)

}  // namespace FootballParameter

namespace google {
namespace protobuf {

template <> struct is_proto_enum< ::FootballParameter::Ubuntu2Unity_DataRequireEnum> : ::std::true_type {};
template <>
inline const EnumDescriptor* GetEnumDescriptor< ::FootballParameter::Ubuntu2Unity_DataRequireEnum>() {
  return ::FootballParameter::Ubuntu2Unity_DataRequireEnum_descriptor();
}

}  // namespace protobuf
}  // namespace google

// @@protoc_insertion_point(global_scope)

#endif  // PROTOBUF_INCLUDED_FootballMode_2eproto
