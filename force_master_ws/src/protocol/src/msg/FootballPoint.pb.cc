// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: FootballPoint.proto

#include "FootballPoint.pb.h"

#include <algorithm>

#include <google/protobuf/stubs/common.h>
#include <google/protobuf/stubs/port.h>
#include <google/protobuf/io/coded_stream.h>
#include <google/protobuf/wire_format_lite_inl.h>
#include <google/protobuf/descriptor.h>
#include <google/protobuf/generated_message_reflection.h>
#include <google/protobuf/reflection_ops.h>
#include <google/protobuf/wire_format.h>
// This is a temporary google only hack
#ifdef GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
#include "third_party/protobuf/version.h"
#endif
// @@protoc_insertion_point(includes)

namespace protobuf_FootballPoint_2eproto {
extern PROTOBUF_INTERNAL_EXPORT_protobuf_FootballPoint_2eproto ::google::protobuf::internal::SCCInfo<0> scc_info_Unity2Ubuntu_Point;
}  // namespace protobuf_FootballPoint_2eproto
namespace FootballPoint {
class Unity2Ubuntu_PointDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<Unity2Ubuntu_Point>
      _instance;
} _Unity2Ubuntu_Point_default_instance_;
class Unity2UbuntuDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<Unity2Ubuntu>
      _instance;
} _Unity2Ubuntu_default_instance_;
class Ubuntu2UnityDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<Ubuntu2Unity>
      _instance;
} _Ubuntu2Unity_default_instance_;
}  // namespace FootballPoint
namespace protobuf_FootballPoint_2eproto {
static void InitDefaultsUnity2Ubuntu_Point() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::FootballPoint::_Unity2Ubuntu_Point_default_instance_;
    new (ptr) ::FootballPoint::Unity2Ubuntu_Point();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::FootballPoint::Unity2Ubuntu_Point::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<0> scc_info_Unity2Ubuntu_Point =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsUnity2Ubuntu_Point}, {}};

static void InitDefaultsUnity2Ubuntu() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::FootballPoint::_Unity2Ubuntu_default_instance_;
    new (ptr) ::FootballPoint::Unity2Ubuntu();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::FootballPoint::Unity2Ubuntu::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<1> scc_info_Unity2Ubuntu =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 1, InitDefaultsUnity2Ubuntu}, {
      &protobuf_FootballPoint_2eproto::scc_info_Unity2Ubuntu_Point.base,}};

static void InitDefaultsUbuntu2Unity() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::FootballPoint::_Ubuntu2Unity_default_instance_;
    new (ptr) ::FootballPoint::Ubuntu2Unity();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::FootballPoint::Ubuntu2Unity::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<0> scc_info_Ubuntu2Unity =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsUbuntu2Unity}, {}};

void InitDefaults() {
  ::google::protobuf::internal::InitSCC(&scc_info_Unity2Ubuntu_Point.base);
  ::google::protobuf::internal::InitSCC(&scc_info_Unity2Ubuntu.base);
  ::google::protobuf::internal::InitSCC(&scc_info_Ubuntu2Unity.base);
}

::google::protobuf::Metadata file_level_metadata[3];
const ::google::protobuf::EnumDescriptor* file_level_enum_descriptors[3];

const ::google::protobuf::uint32 TableStruct::offsets[] GOOGLE_PROTOBUF_ATTRIBUTE_SECTION_VARIABLE(protodesc_cold) = {
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::FootballPoint::Unity2Ubuntu_Point, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::FootballPoint::Unity2Ubuntu_Point, x_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::FootballPoint::Unity2Ubuntu_Point, y_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::FootballPoint::Unity2Ubuntu, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::FootballPoint::Unity2Ubuntu, pointfootball_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::FootballPoint::Unity2Ubuntu, radium_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::FootballPoint::Unity2Ubuntu, pointshoot_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::FootballPoint::Unity2Ubuntu, pointtangency_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::FootballPoint::Unity2Ubuntu, ifshoot_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::FootballPoint::Unity2Ubuntu, gamereplay_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::FootballPoint::Unity2Ubuntu, clockdirection_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::FootballPoint::Ubuntu2Unity, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::FootballPoint::Ubuntu2Unity, datareceived_),
};
static const ::google::protobuf::internal::MigrationSchema schemas[] GOOGLE_PROTOBUF_ATTRIBUTE_SECTION_VARIABLE(protodesc_cold) = {
  { 0, -1, sizeof(::FootballPoint::Unity2Ubuntu_Point)},
  { 7, -1, sizeof(::FootballPoint::Unity2Ubuntu)},
  { 19, -1, sizeof(::FootballPoint::Ubuntu2Unity)},
};

static ::google::protobuf::Message const * const file_default_instances[] = {
  reinterpret_cast<const ::google::protobuf::Message*>(&::FootballPoint::_Unity2Ubuntu_Point_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::FootballPoint::_Unity2Ubuntu_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::FootballPoint::_Ubuntu2Unity_default_instance_),
};

void protobuf_AssignDescriptors() {
  AddDescriptors();
  AssignDescriptors(
      "FootballPoint.proto", schemas, file_default_instances, TableStruct::offsets,
      file_level_metadata, file_level_enum_descriptors, NULL);
}

void protobuf_AssignDescriptorsOnce() {
  static ::google::protobuf::internal::once_flag once;
  ::google::protobuf::internal::call_once(once, protobuf_AssignDescriptors);
}

void protobuf_RegisterTypes(const ::std::string&) GOOGLE_PROTOBUF_ATTRIBUTE_COLD;
void protobuf_RegisterTypes(const ::std::string&) {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::internal::RegisterAllTypes(file_level_metadata, 3);
}

void AddDescriptorsImpl() {
  InitDefaults();
  static const char descriptor[] GOOGLE_PROTOBUF_ATTRIBUTE_SECTION_VARIABLE(protodesc_cold) = {
      "\n\023FootballPoint.proto\022\rFootballPoint\"\375\003\n"
      "\014Unity2Ubuntu\0228\n\rPointFootball\030\001 \001(\0132!.F"
      "ootballPoint.Unity2Ubuntu.Point\022\016\n\006Radiu"
      "m\030\002 \001(\002\0225\n\nPointShoot\030\003 \001(\0132!.FootballPo"
      "int.Unity2Ubuntu.Point\0228\n\rPointTangency\030"
      "\004 \001(\0132!.FootballPoint.Unity2Ubuntu.Point"
      "\022\017\n\007IfShoot\030\005 \001(\010\022>\n\nGameReplay\030\006 \001(\0162*."
      "FootballPoint.Unity2Ubuntu.GameReplayEnu"
      "m\022A\n\016ClockDirection\030\007 \001(\0162).FootballPoin"
      "t.Unity2Ubuntu.ClockwiseEnum\032\035\n\005Point\022\t\n"
      "\001x\030\001 \001(\002\022\t\n\001y\030\002 \001(\002\">\n\016GameReplayEnum\022\014\n"
      "\010game_ing\020\000\022\r\n\tgame_back\020\001\022\017\n\013game_repla"
      "y\020\002\"\?\n\rClockwiseEnum\022\010\n\004none\020\000\022\r\n\tclockw"
      "ise\020\001\022\025\n\021counter_clockwise\020\002\"\220\001\n\014Ubuntu2"
      "Unity\022B\n\014DataReceived\030\001 \001(\0162,.FootballPo"
      "int.Ubuntu2Unity.DataReceivedEnum\"<\n\020Dat"
      "aReceivedEnum\022\025\n\021data_not_received\020\000\022\021\n\r"
      "data_received\020\001b\006proto3"
  };
  ::google::protobuf::DescriptorPool::InternalAddGeneratedFile(
      descriptor, 703);
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedFile(
    "FootballPoint.proto", &protobuf_RegisterTypes);
}

void AddDescriptors() {
  static ::google::protobuf::internal::once_flag once;
  ::google::protobuf::internal::call_once(once, AddDescriptorsImpl);
}
// Force AddDescriptors() to be called at dynamic initialization time.
struct StaticDescriptorInitializer {
  StaticDescriptorInitializer() {
    AddDescriptors();
  }
} static_descriptor_initializer;
}  // namespace protobuf_FootballPoint_2eproto
namespace FootballPoint {
const ::google::protobuf::EnumDescriptor* Unity2Ubuntu_GameReplayEnum_descriptor() {
  protobuf_FootballPoint_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_FootballPoint_2eproto::file_level_enum_descriptors[0];
}
bool Unity2Ubuntu_GameReplayEnum_IsValid(int value) {
  switch (value) {
    case 0:
    case 1:
    case 2:
      return true;
    default:
      return false;
  }
}

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const Unity2Ubuntu_GameReplayEnum Unity2Ubuntu::game_ing;
const Unity2Ubuntu_GameReplayEnum Unity2Ubuntu::game_back;
const Unity2Ubuntu_GameReplayEnum Unity2Ubuntu::game_replay;
const Unity2Ubuntu_GameReplayEnum Unity2Ubuntu::GameReplayEnum_MIN;
const Unity2Ubuntu_GameReplayEnum Unity2Ubuntu::GameReplayEnum_MAX;
const int Unity2Ubuntu::GameReplayEnum_ARRAYSIZE;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900
const ::google::protobuf::EnumDescriptor* Unity2Ubuntu_ClockwiseEnum_descriptor() {
  protobuf_FootballPoint_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_FootballPoint_2eproto::file_level_enum_descriptors[1];
}
bool Unity2Ubuntu_ClockwiseEnum_IsValid(int value) {
  switch (value) {
    case 0:
    case 1:
    case 2:
      return true;
    default:
      return false;
  }
}

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const Unity2Ubuntu_ClockwiseEnum Unity2Ubuntu::none;
const Unity2Ubuntu_ClockwiseEnum Unity2Ubuntu::clockwise;
const Unity2Ubuntu_ClockwiseEnum Unity2Ubuntu::counter_clockwise;
const Unity2Ubuntu_ClockwiseEnum Unity2Ubuntu::ClockwiseEnum_MIN;
const Unity2Ubuntu_ClockwiseEnum Unity2Ubuntu::ClockwiseEnum_MAX;
const int Unity2Ubuntu::ClockwiseEnum_ARRAYSIZE;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900
const ::google::protobuf::EnumDescriptor* Ubuntu2Unity_DataReceivedEnum_descriptor() {
  protobuf_FootballPoint_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_FootballPoint_2eproto::file_level_enum_descriptors[2];
}
bool Ubuntu2Unity_DataReceivedEnum_IsValid(int value) {
  switch (value) {
    case 0:
    case 1:
      return true;
    default:
      return false;
  }
}

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const Ubuntu2Unity_DataReceivedEnum Ubuntu2Unity::data_not_received;
const Ubuntu2Unity_DataReceivedEnum Ubuntu2Unity::data_received;
const Ubuntu2Unity_DataReceivedEnum Ubuntu2Unity::DataReceivedEnum_MIN;
const Ubuntu2Unity_DataReceivedEnum Ubuntu2Unity::DataReceivedEnum_MAX;
const int Ubuntu2Unity::DataReceivedEnum_ARRAYSIZE;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

// ===================================================================

void Unity2Ubuntu_Point::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int Unity2Ubuntu_Point::kXFieldNumber;
const int Unity2Ubuntu_Point::kYFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

Unity2Ubuntu_Point::Unity2Ubuntu_Point()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_FootballPoint_2eproto::scc_info_Unity2Ubuntu_Point.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:FootballPoint.Unity2Ubuntu.Point)
}
Unity2Ubuntu_Point::Unity2Ubuntu_Point(const Unity2Ubuntu_Point& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::memcpy(&x_, &from.x_,
    static_cast<size_t>(reinterpret_cast<char*>(&y_) -
    reinterpret_cast<char*>(&x_)) + sizeof(y_));
  // @@protoc_insertion_point(copy_constructor:FootballPoint.Unity2Ubuntu.Point)
}

void Unity2Ubuntu_Point::SharedCtor() {
  ::memset(&x_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&y_) -
      reinterpret_cast<char*>(&x_)) + sizeof(y_));
}

Unity2Ubuntu_Point::~Unity2Ubuntu_Point() {
  // @@protoc_insertion_point(destructor:FootballPoint.Unity2Ubuntu.Point)
  SharedDtor();
}

void Unity2Ubuntu_Point::SharedDtor() {
}

void Unity2Ubuntu_Point::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* Unity2Ubuntu_Point::descriptor() {
  ::protobuf_FootballPoint_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_FootballPoint_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const Unity2Ubuntu_Point& Unity2Ubuntu_Point::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_FootballPoint_2eproto::scc_info_Unity2Ubuntu_Point.base);
  return *internal_default_instance();
}


void Unity2Ubuntu_Point::Clear() {
// @@protoc_insertion_point(message_clear_start:FootballPoint.Unity2Ubuntu.Point)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  ::memset(&x_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&y_) -
      reinterpret_cast<char*>(&x_)) + sizeof(y_));
  _internal_metadata_.Clear();
}

bool Unity2Ubuntu_Point::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:FootballPoint.Unity2Ubuntu.Point)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // float x = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(13u /* 13 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   float, ::google::protobuf::internal::WireFormatLite::TYPE_FLOAT>(
                 input, &x_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // float y = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(21u /* 21 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   float, ::google::protobuf::internal::WireFormatLite::TYPE_FLOAT>(
                 input, &y_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:FootballPoint.Unity2Ubuntu.Point)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:FootballPoint.Unity2Ubuntu.Point)
  return false;
#undef DO_
}

void Unity2Ubuntu_Point::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:FootballPoint.Unity2Ubuntu.Point)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // float x = 1;
  if (this->x() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteFloat(1, this->x(), output);
  }

  // float y = 2;
  if (this->y() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteFloat(2, this->y(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:FootballPoint.Unity2Ubuntu.Point)
}

::google::protobuf::uint8* Unity2Ubuntu_Point::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:FootballPoint.Unity2Ubuntu.Point)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // float x = 1;
  if (this->x() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteFloatToArray(1, this->x(), target);
  }

  // float y = 2;
  if (this->y() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteFloatToArray(2, this->y(), target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:FootballPoint.Unity2Ubuntu.Point)
  return target;
}

size_t Unity2Ubuntu_Point::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:FootballPoint.Unity2Ubuntu.Point)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // float x = 1;
  if (this->x() != 0) {
    total_size += 1 + 4;
  }

  // float y = 2;
  if (this->y() != 0) {
    total_size += 1 + 4;
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void Unity2Ubuntu_Point::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:FootballPoint.Unity2Ubuntu.Point)
  GOOGLE_DCHECK_NE(&from, this);
  const Unity2Ubuntu_Point* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const Unity2Ubuntu_Point>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:FootballPoint.Unity2Ubuntu.Point)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:FootballPoint.Unity2Ubuntu.Point)
    MergeFrom(*source);
  }
}

void Unity2Ubuntu_Point::MergeFrom(const Unity2Ubuntu_Point& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:FootballPoint.Unity2Ubuntu.Point)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.x() != 0) {
    set_x(from.x());
  }
  if (from.y() != 0) {
    set_y(from.y());
  }
}

void Unity2Ubuntu_Point::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:FootballPoint.Unity2Ubuntu.Point)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void Unity2Ubuntu_Point::CopyFrom(const Unity2Ubuntu_Point& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:FootballPoint.Unity2Ubuntu.Point)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool Unity2Ubuntu_Point::IsInitialized() const {
  return true;
}

void Unity2Ubuntu_Point::Swap(Unity2Ubuntu_Point* other) {
  if (other == this) return;
  InternalSwap(other);
}
void Unity2Ubuntu_Point::InternalSwap(Unity2Ubuntu_Point* other) {
  using std::swap;
  swap(x_, other->x_);
  swap(y_, other->y_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata Unity2Ubuntu_Point::GetMetadata() const {
  protobuf_FootballPoint_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_FootballPoint_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void Unity2Ubuntu::InitAsDefaultInstance() {
  ::FootballPoint::_Unity2Ubuntu_default_instance_._instance.get_mutable()->pointfootball_ = const_cast< ::FootballPoint::Unity2Ubuntu_Point*>(
      ::FootballPoint::Unity2Ubuntu_Point::internal_default_instance());
  ::FootballPoint::_Unity2Ubuntu_default_instance_._instance.get_mutable()->pointshoot_ = const_cast< ::FootballPoint::Unity2Ubuntu_Point*>(
      ::FootballPoint::Unity2Ubuntu_Point::internal_default_instance());
  ::FootballPoint::_Unity2Ubuntu_default_instance_._instance.get_mutable()->pointtangency_ = const_cast< ::FootballPoint::Unity2Ubuntu_Point*>(
      ::FootballPoint::Unity2Ubuntu_Point::internal_default_instance());
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int Unity2Ubuntu::kPointFootballFieldNumber;
const int Unity2Ubuntu::kRadiumFieldNumber;
const int Unity2Ubuntu::kPointShootFieldNumber;
const int Unity2Ubuntu::kPointTangencyFieldNumber;
const int Unity2Ubuntu::kIfShootFieldNumber;
const int Unity2Ubuntu::kGameReplayFieldNumber;
const int Unity2Ubuntu::kClockDirectionFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

Unity2Ubuntu::Unity2Ubuntu()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_FootballPoint_2eproto::scc_info_Unity2Ubuntu.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:FootballPoint.Unity2Ubuntu)
}
Unity2Ubuntu::Unity2Ubuntu(const Unity2Ubuntu& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  if (from.has_pointfootball()) {
    pointfootball_ = new ::FootballPoint::Unity2Ubuntu_Point(*from.pointfootball_);
  } else {
    pointfootball_ = NULL;
  }
  if (from.has_pointshoot()) {
    pointshoot_ = new ::FootballPoint::Unity2Ubuntu_Point(*from.pointshoot_);
  } else {
    pointshoot_ = NULL;
  }
  if (from.has_pointtangency()) {
    pointtangency_ = new ::FootballPoint::Unity2Ubuntu_Point(*from.pointtangency_);
  } else {
    pointtangency_ = NULL;
  }
  ::memcpy(&radium_, &from.radium_,
    static_cast<size_t>(reinterpret_cast<char*>(&clockdirection_) -
    reinterpret_cast<char*>(&radium_)) + sizeof(clockdirection_));
  // @@protoc_insertion_point(copy_constructor:FootballPoint.Unity2Ubuntu)
}

void Unity2Ubuntu::SharedCtor() {
  ::memset(&pointfootball_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&clockdirection_) -
      reinterpret_cast<char*>(&pointfootball_)) + sizeof(clockdirection_));
}

Unity2Ubuntu::~Unity2Ubuntu() {
  // @@protoc_insertion_point(destructor:FootballPoint.Unity2Ubuntu)
  SharedDtor();
}

void Unity2Ubuntu::SharedDtor() {
  if (this != internal_default_instance()) delete pointfootball_;
  if (this != internal_default_instance()) delete pointshoot_;
  if (this != internal_default_instance()) delete pointtangency_;
}

void Unity2Ubuntu::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* Unity2Ubuntu::descriptor() {
  ::protobuf_FootballPoint_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_FootballPoint_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const Unity2Ubuntu& Unity2Ubuntu::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_FootballPoint_2eproto::scc_info_Unity2Ubuntu.base);
  return *internal_default_instance();
}


void Unity2Ubuntu::Clear() {
// @@protoc_insertion_point(message_clear_start:FootballPoint.Unity2Ubuntu)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  if (GetArenaNoVirtual() == NULL && pointfootball_ != NULL) {
    delete pointfootball_;
  }
  pointfootball_ = NULL;
  if (GetArenaNoVirtual() == NULL && pointshoot_ != NULL) {
    delete pointshoot_;
  }
  pointshoot_ = NULL;
  if (GetArenaNoVirtual() == NULL && pointtangency_ != NULL) {
    delete pointtangency_;
  }
  pointtangency_ = NULL;
  ::memset(&radium_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&clockdirection_) -
      reinterpret_cast<char*>(&radium_)) + sizeof(clockdirection_));
  _internal_metadata_.Clear();
}

bool Unity2Ubuntu::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:FootballPoint.Unity2Ubuntu)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // .FootballPoint.Unity2Ubuntu.Point PointFootball = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_pointfootball()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // float Radium = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(21u /* 21 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   float, ::google::protobuf::internal::WireFormatLite::TYPE_FLOAT>(
                 input, &radium_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .FootballPoint.Unity2Ubuntu.Point PointShoot = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(26u /* 26 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_pointshoot()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .FootballPoint.Unity2Ubuntu.Point PointTangency = 4;
      case 4: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(34u /* 34 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_pointtangency()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // bool IfShoot = 5;
      case 5: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(40u /* 40 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   bool, ::google::protobuf::internal::WireFormatLite::TYPE_BOOL>(
                 input, &ifshoot_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .FootballPoint.Unity2Ubuntu.GameReplayEnum GameReplay = 6;
      case 6: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(48u /* 48 & 0xFF */)) {
          int value;
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   int, ::google::protobuf::internal::WireFormatLite::TYPE_ENUM>(
                 input, &value)));
          set_gamereplay(static_cast< ::FootballPoint::Unity2Ubuntu_GameReplayEnum >(value));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .FootballPoint.Unity2Ubuntu.ClockwiseEnum ClockDirection = 7;
      case 7: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(56u /* 56 & 0xFF */)) {
          int value;
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   int, ::google::protobuf::internal::WireFormatLite::TYPE_ENUM>(
                 input, &value)));
          set_clockdirection(static_cast< ::FootballPoint::Unity2Ubuntu_ClockwiseEnum >(value));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:FootballPoint.Unity2Ubuntu)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:FootballPoint.Unity2Ubuntu)
  return false;
#undef DO_
}

void Unity2Ubuntu::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:FootballPoint.Unity2Ubuntu)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .FootballPoint.Unity2Ubuntu.Point PointFootball = 1;
  if (this->has_pointfootball()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      1, this->_internal_pointfootball(), output);
  }

  // float Radium = 2;
  if (this->radium() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteFloat(2, this->radium(), output);
  }

  // .FootballPoint.Unity2Ubuntu.Point PointShoot = 3;
  if (this->has_pointshoot()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      3, this->_internal_pointshoot(), output);
  }

  // .FootballPoint.Unity2Ubuntu.Point PointTangency = 4;
  if (this->has_pointtangency()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      4, this->_internal_pointtangency(), output);
  }

  // bool IfShoot = 5;
  if (this->ifshoot() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteBool(5, this->ifshoot(), output);
  }

  // .FootballPoint.Unity2Ubuntu.GameReplayEnum GameReplay = 6;
  if (this->gamereplay() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteEnum(
      6, this->gamereplay(), output);
  }

  // .FootballPoint.Unity2Ubuntu.ClockwiseEnum ClockDirection = 7;
  if (this->clockdirection() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteEnum(
      7, this->clockdirection(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:FootballPoint.Unity2Ubuntu)
}

::google::protobuf::uint8* Unity2Ubuntu::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:FootballPoint.Unity2Ubuntu)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .FootballPoint.Unity2Ubuntu.Point PointFootball = 1;
  if (this->has_pointfootball()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        1, this->_internal_pointfootball(), deterministic, target);
  }

  // float Radium = 2;
  if (this->radium() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteFloatToArray(2, this->radium(), target);
  }

  // .FootballPoint.Unity2Ubuntu.Point PointShoot = 3;
  if (this->has_pointshoot()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        3, this->_internal_pointshoot(), deterministic, target);
  }

  // .FootballPoint.Unity2Ubuntu.Point PointTangency = 4;
  if (this->has_pointtangency()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        4, this->_internal_pointtangency(), deterministic, target);
  }

  // bool IfShoot = 5;
  if (this->ifshoot() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteBoolToArray(5, this->ifshoot(), target);
  }

  // .FootballPoint.Unity2Ubuntu.GameReplayEnum GameReplay = 6;
  if (this->gamereplay() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteEnumToArray(
      6, this->gamereplay(), target);
  }

  // .FootballPoint.Unity2Ubuntu.ClockwiseEnum ClockDirection = 7;
  if (this->clockdirection() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteEnumToArray(
      7, this->clockdirection(), target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:FootballPoint.Unity2Ubuntu)
  return target;
}

size_t Unity2Ubuntu::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:FootballPoint.Unity2Ubuntu)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // .FootballPoint.Unity2Ubuntu.Point PointFootball = 1;
  if (this->has_pointfootball()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *pointfootball_);
  }

  // .FootballPoint.Unity2Ubuntu.Point PointShoot = 3;
  if (this->has_pointshoot()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *pointshoot_);
  }

  // .FootballPoint.Unity2Ubuntu.Point PointTangency = 4;
  if (this->has_pointtangency()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *pointtangency_);
  }

  // float Radium = 2;
  if (this->radium() != 0) {
    total_size += 1 + 4;
  }

  // bool IfShoot = 5;
  if (this->ifshoot() != 0) {
    total_size += 1 + 1;
  }

  // .FootballPoint.Unity2Ubuntu.GameReplayEnum GameReplay = 6;
  if (this->gamereplay() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::EnumSize(this->gamereplay());
  }

  // .FootballPoint.Unity2Ubuntu.ClockwiseEnum ClockDirection = 7;
  if (this->clockdirection() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::EnumSize(this->clockdirection());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void Unity2Ubuntu::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:FootballPoint.Unity2Ubuntu)
  GOOGLE_DCHECK_NE(&from, this);
  const Unity2Ubuntu* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const Unity2Ubuntu>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:FootballPoint.Unity2Ubuntu)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:FootballPoint.Unity2Ubuntu)
    MergeFrom(*source);
  }
}

void Unity2Ubuntu::MergeFrom(const Unity2Ubuntu& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:FootballPoint.Unity2Ubuntu)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.has_pointfootball()) {
    mutable_pointfootball()->::FootballPoint::Unity2Ubuntu_Point::MergeFrom(from.pointfootball());
  }
  if (from.has_pointshoot()) {
    mutable_pointshoot()->::FootballPoint::Unity2Ubuntu_Point::MergeFrom(from.pointshoot());
  }
  if (from.has_pointtangency()) {
    mutable_pointtangency()->::FootballPoint::Unity2Ubuntu_Point::MergeFrom(from.pointtangency());
  }
  if (from.radium() != 0) {
    set_radium(from.radium());
  }
  if (from.ifshoot() != 0) {
    set_ifshoot(from.ifshoot());
  }
  if (from.gamereplay() != 0) {
    set_gamereplay(from.gamereplay());
  }
  if (from.clockdirection() != 0) {
    set_clockdirection(from.clockdirection());
  }
}

void Unity2Ubuntu::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:FootballPoint.Unity2Ubuntu)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void Unity2Ubuntu::CopyFrom(const Unity2Ubuntu& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:FootballPoint.Unity2Ubuntu)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool Unity2Ubuntu::IsInitialized() const {
  return true;
}

void Unity2Ubuntu::Swap(Unity2Ubuntu* other) {
  if (other == this) return;
  InternalSwap(other);
}
void Unity2Ubuntu::InternalSwap(Unity2Ubuntu* other) {
  using std::swap;
  swap(pointfootball_, other->pointfootball_);
  swap(pointshoot_, other->pointshoot_);
  swap(pointtangency_, other->pointtangency_);
  swap(radium_, other->radium_);
  swap(ifshoot_, other->ifshoot_);
  swap(gamereplay_, other->gamereplay_);
  swap(clockdirection_, other->clockdirection_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata Unity2Ubuntu::GetMetadata() const {
  protobuf_FootballPoint_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_FootballPoint_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void Ubuntu2Unity::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int Ubuntu2Unity::kDataReceivedFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

Ubuntu2Unity::Ubuntu2Unity()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_FootballPoint_2eproto::scc_info_Ubuntu2Unity.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:FootballPoint.Ubuntu2Unity)
}
Ubuntu2Unity::Ubuntu2Unity(const Ubuntu2Unity& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  datareceived_ = from.datareceived_;
  // @@protoc_insertion_point(copy_constructor:FootballPoint.Ubuntu2Unity)
}

void Ubuntu2Unity::SharedCtor() {
  datareceived_ = 0;
}

Ubuntu2Unity::~Ubuntu2Unity() {
  // @@protoc_insertion_point(destructor:FootballPoint.Ubuntu2Unity)
  SharedDtor();
}

void Ubuntu2Unity::SharedDtor() {
}

void Ubuntu2Unity::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* Ubuntu2Unity::descriptor() {
  ::protobuf_FootballPoint_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_FootballPoint_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const Ubuntu2Unity& Ubuntu2Unity::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_FootballPoint_2eproto::scc_info_Ubuntu2Unity.base);
  return *internal_default_instance();
}


void Ubuntu2Unity::Clear() {
// @@protoc_insertion_point(message_clear_start:FootballPoint.Ubuntu2Unity)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  datareceived_ = 0;
  _internal_metadata_.Clear();
}

bool Ubuntu2Unity::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:FootballPoint.Ubuntu2Unity)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // .FootballPoint.Ubuntu2Unity.DataReceivedEnum DataReceived = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u /* 8 & 0xFF */)) {
          int value;
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   int, ::google::protobuf::internal::WireFormatLite::TYPE_ENUM>(
                 input, &value)));
          set_datareceived(static_cast< ::FootballPoint::Ubuntu2Unity_DataReceivedEnum >(value));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:FootballPoint.Ubuntu2Unity)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:FootballPoint.Ubuntu2Unity)
  return false;
#undef DO_
}

void Ubuntu2Unity::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:FootballPoint.Ubuntu2Unity)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .FootballPoint.Ubuntu2Unity.DataReceivedEnum DataReceived = 1;
  if (this->datareceived() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteEnum(
      1, this->datareceived(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:FootballPoint.Ubuntu2Unity)
}

::google::protobuf::uint8* Ubuntu2Unity::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:FootballPoint.Ubuntu2Unity)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .FootballPoint.Ubuntu2Unity.DataReceivedEnum DataReceived = 1;
  if (this->datareceived() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteEnumToArray(
      1, this->datareceived(), target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:FootballPoint.Ubuntu2Unity)
  return target;
}

size_t Ubuntu2Unity::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:FootballPoint.Ubuntu2Unity)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // .FootballPoint.Ubuntu2Unity.DataReceivedEnum DataReceived = 1;
  if (this->datareceived() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::EnumSize(this->datareceived());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void Ubuntu2Unity::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:FootballPoint.Ubuntu2Unity)
  GOOGLE_DCHECK_NE(&from, this);
  const Ubuntu2Unity* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const Ubuntu2Unity>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:FootballPoint.Ubuntu2Unity)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:FootballPoint.Ubuntu2Unity)
    MergeFrom(*source);
  }
}

void Ubuntu2Unity::MergeFrom(const Ubuntu2Unity& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:FootballPoint.Ubuntu2Unity)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.datareceived() != 0) {
    set_datareceived(from.datareceived());
  }
}

void Ubuntu2Unity::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:FootballPoint.Ubuntu2Unity)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void Ubuntu2Unity::CopyFrom(const Ubuntu2Unity& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:FootballPoint.Ubuntu2Unity)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool Ubuntu2Unity::IsInitialized() const {
  return true;
}

void Ubuntu2Unity::Swap(Ubuntu2Unity* other) {
  if (other == this) return;
  InternalSwap(other);
}
void Ubuntu2Unity::InternalSwap(Ubuntu2Unity* other) {
  using std::swap;
  swap(datareceived_, other->datareceived_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata Ubuntu2Unity::GetMetadata() const {
  protobuf_FootballPoint_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_FootballPoint_2eproto::file_level_metadata[kIndexInFileMessages];
}


// @@protoc_insertion_point(namespace_scope)
}  // namespace FootballPoint
namespace google {
namespace protobuf {
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::FootballPoint::Unity2Ubuntu_Point* Arena::CreateMaybeMessage< ::FootballPoint::Unity2Ubuntu_Point >(Arena* arena) {
  return Arena::CreateInternal< ::FootballPoint::Unity2Ubuntu_Point >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::FootballPoint::Unity2Ubuntu* Arena::CreateMaybeMessage< ::FootballPoint::Unity2Ubuntu >(Arena* arena) {
  return Arena::CreateInternal< ::FootballPoint::Unity2Ubuntu >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::FootballPoint::Ubuntu2Unity* Arena::CreateMaybeMessage< ::FootballPoint::Ubuntu2Unity >(Arena* arena) {
  return Arena::CreateInternal< ::FootballPoint::Ubuntu2Unity >(arena);
}
}  // namespace protobuf
}  // namespace google

// @@protoc_insertion_point(global_scope)
