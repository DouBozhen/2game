// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: SchulteGrid.proto

#include "SchulteGrid.pb.h"

#include <algorithm>

#include <google/protobuf/stubs/common.h>
#include <google/protobuf/stubs/port.h>
#include <google/protobuf/io/coded_stream.h>
#include <google/protobuf/wire_format_lite_inl.h>
#include <google/protobuf/descriptor.h>
#include <google/protobuf/generated_message_reflection.h>
#include <google/protobuf/reflection_ops.h>
#include <google/protobuf/wire_format.h>
// This is a temporary google only hack
#ifdef GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
#include "third_party/protobuf/version.h"
#endif
// @@protoc_insertion_point(includes)

namespace protobuf_SchulteGrid_2eproto {
extern PROTOBUF_INTERNAL_EXPORT_protobuf_SchulteGrid_2eproto ::google::protobuf::internal::SCCInfo<0> scc_info_Unity2Ubuntu_Point;
}  // namespace protobuf_SchulteGrid_2eproto
namespace SchulteGrid {
class Unity2Ubuntu_PointDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<Unity2Ubuntu_Point>
      _instance;
} _Unity2Ubuntu_Point_default_instance_;
class Unity2UbuntuDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<Unity2Ubuntu>
      _instance;
} _Unity2Ubuntu_default_instance_;
class Ubuntu2UnityDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<Ubuntu2Unity>
      _instance;
} _Ubuntu2Unity_default_instance_;
}  // namespace SchulteGrid
namespace protobuf_SchulteGrid_2eproto {
static void InitDefaultsUnity2Ubuntu_Point() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::SchulteGrid::_Unity2Ubuntu_Point_default_instance_;
    new (ptr) ::SchulteGrid::Unity2Ubuntu_Point();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::SchulteGrid::Unity2Ubuntu_Point::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<0> scc_info_Unity2Ubuntu_Point =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsUnity2Ubuntu_Point}, {}};

static void InitDefaultsUnity2Ubuntu() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::SchulteGrid::_Unity2Ubuntu_default_instance_;
    new (ptr) ::SchulteGrid::Unity2Ubuntu();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::SchulteGrid::Unity2Ubuntu::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<1> scc_info_Unity2Ubuntu =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 1, InitDefaultsUnity2Ubuntu}, {
      &protobuf_SchulteGrid_2eproto::scc_info_Unity2Ubuntu_Point.base,}};

static void InitDefaultsUbuntu2Unity() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::SchulteGrid::_Ubuntu2Unity_default_instance_;
    new (ptr) ::SchulteGrid::Ubuntu2Unity();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::SchulteGrid::Ubuntu2Unity::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<0> scc_info_Ubuntu2Unity =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsUbuntu2Unity}, {}};

void InitDefaults() {
  ::google::protobuf::internal::InitSCC(&scc_info_Unity2Ubuntu_Point.base);
  ::google::protobuf::internal::InitSCC(&scc_info_Unity2Ubuntu.base);
  ::google::protobuf::internal::InitSCC(&scc_info_Ubuntu2Unity.base);
}

::google::protobuf::Metadata file_level_metadata[3];
const ::google::protobuf::EnumDescriptor* file_level_enum_descriptors[3];

const ::google::protobuf::uint32 TableStruct::offsets[] GOOGLE_PROTOBUF_ATTRIBUTE_SECTION_VARIABLE(protodesc_cold) = {
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::SchulteGrid::Unity2Ubuntu_Point, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::SchulteGrid::Unity2Ubuntu_Point, x_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::SchulteGrid::Unity2Ubuntu_Point, y_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::SchulteGrid::Unity2Ubuntu, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::SchulteGrid::Unity2Ubuntu, pointgrid_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::SchulteGrid::Unity2Ubuntu, pointorigin_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::SchulteGrid::Unity2Ubuntu, backnum_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::SchulteGrid::Unity2Ubuntu, isfinish_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::SchulteGrid::Ubuntu2Unity, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::SchulteGrid::Ubuntu2Unity, tcpgesture_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::SchulteGrid::Ubuntu2Unity, gridsize_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::SchulteGrid::Ubuntu2Unity, gamestate_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::SchulteGrid::Ubuntu2Unity, gamescore_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::SchulteGrid::Ubuntu2Unity, gamereplay_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::SchulteGrid::Ubuntu2Unity, gamedevice_),
};
static const ::google::protobuf::internal::MigrationSchema schemas[] GOOGLE_PROTOBUF_ATTRIBUTE_SECTION_VARIABLE(protodesc_cold) = {
  { 0, -1, sizeof(::SchulteGrid::Unity2Ubuntu_Point)},
  { 7, -1, sizeof(::SchulteGrid::Unity2Ubuntu)},
  { 16, -1, sizeof(::SchulteGrid::Ubuntu2Unity)},
};

static ::google::protobuf::Message const * const file_default_instances[] = {
  reinterpret_cast<const ::google::protobuf::Message*>(&::SchulteGrid::_Unity2Ubuntu_Point_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::SchulteGrid::_Unity2Ubuntu_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::SchulteGrid::_Ubuntu2Unity_default_instance_),
};

void protobuf_AssignDescriptors() {
  AddDescriptors();
  AssignDescriptors(
      "SchulteGrid.proto", schemas, file_default_instances, TableStruct::offsets,
      file_level_metadata, file_level_enum_descriptors, NULL);
}

void protobuf_AssignDescriptorsOnce() {
  static ::google::protobuf::internal::once_flag once;
  ::google::protobuf::internal::call_once(once, protobuf_AssignDescriptors);
}

void protobuf_RegisterTypes(const ::std::string&) GOOGLE_PROTOBUF_ATTRIBUTE_COLD;
void protobuf_RegisterTypes(const ::std::string&) {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::internal::RegisterAllTypes(file_level_metadata, 3);
}

void AddDescriptorsImpl() {
  InitDefaults();
  static const char descriptor[] GOOGLE_PROTOBUF_ATTRIBUTE_SECTION_VARIABLE(protodesc_cold) = {
      "\n\021SchulteGrid.proto\022\013SchulteGrid\"\272\001\n\014Uni"
      "ty2Ubuntu\0222\n\tPointGrid\030\001 \003(\0132\037.SchulteGr"
      "id.Unity2Ubuntu.Point\0224\n\013PointOrigin\030\002 \001"
      "(\0132\037.SchulteGrid.Unity2Ubuntu.Point\022\017\n\007B"
      "ackNum\030\003 \001(\005\022\020\n\010IsFinish\030\004 \001(\005\032\035\n\005Point\022"
      "\t\n\001x\030\001 \001(\002\022\t\n\001y\030\002 \001(\002\"\301\003\n\014Ubuntu2Unity\022\022"
      "\n\nTCPGesture\030\001 \003(\002\022\020\n\010GridSize\030\002 \001(\005\022:\n\t"
      "GameState\030\003 \001(\0162\'.SchulteGrid.Ubuntu2Uni"
      "ty.GameStateEnum\022\021\n\tGameScore\030\004 \001(\002\022<\n\nG"
      "ameReplay\030\005 \001(\0162(.SchulteGrid.Ubuntu2Uni"
      "ty.GameReplayEnum\022<\n\nGameDevice\030\006 \001(\0162(."
      "SchulteGrid.Ubuntu2Unity.GameDeviceEnum\""
      "J\n\rGameStateEnum\022\013\n\007gameing\020\000\022\014\n\010game_wi"
      "n\020\001\022\r\n\tgame_lose\020\002\022\017\n\013game_finish\020\003\"N\n\016G"
      "ameReplayEnum\022\014\n\010game_ing\020\000\022\r\n\tgame_back"
      "\020\001\022\017\n\013game_replay\020\002\022\016\n\ngame_pause\020\003\"$\n\016G"
      "ameDeviceEnum\022\006\n\002vr\020\000\022\n\n\006screen\020\001b\006proto"
      "3"
  };
  ::google::protobuf::DescriptorPool::InternalAddGeneratedFile(
      descriptor, 681);
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedFile(
    "SchulteGrid.proto", &protobuf_RegisterTypes);
}

void AddDescriptors() {
  static ::google::protobuf::internal::once_flag once;
  ::google::protobuf::internal::call_once(once, AddDescriptorsImpl);
}
// Force AddDescriptors() to be called at dynamic initialization time.
struct StaticDescriptorInitializer {
  StaticDescriptorInitializer() {
    AddDescriptors();
  }
} static_descriptor_initializer;
}  // namespace protobuf_SchulteGrid_2eproto
namespace SchulteGrid {
const ::google::protobuf::EnumDescriptor* Ubuntu2Unity_GameStateEnum_descriptor() {
  protobuf_SchulteGrid_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_SchulteGrid_2eproto::file_level_enum_descriptors[0];
}
bool Ubuntu2Unity_GameStateEnum_IsValid(int value) {
  switch (value) {
    case 0:
    case 1:
    case 2:
    case 3:
      return true;
    default:
      return false;
  }
}

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const Ubuntu2Unity_GameStateEnum Ubuntu2Unity::gameing;
const Ubuntu2Unity_GameStateEnum Ubuntu2Unity::game_win;
const Ubuntu2Unity_GameStateEnum Ubuntu2Unity::game_lose;
const Ubuntu2Unity_GameStateEnum Ubuntu2Unity::game_finish;
const Ubuntu2Unity_GameStateEnum Ubuntu2Unity::GameStateEnum_MIN;
const Ubuntu2Unity_GameStateEnum Ubuntu2Unity::GameStateEnum_MAX;
const int Ubuntu2Unity::GameStateEnum_ARRAYSIZE;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900
const ::google::protobuf::EnumDescriptor* Ubuntu2Unity_GameReplayEnum_descriptor() {
  protobuf_SchulteGrid_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_SchulteGrid_2eproto::file_level_enum_descriptors[1];
}
bool Ubuntu2Unity_GameReplayEnum_IsValid(int value) {
  switch (value) {
    case 0:
    case 1:
    case 2:
    case 3:
      return true;
    default:
      return false;
  }
}

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const Ubuntu2Unity_GameReplayEnum Ubuntu2Unity::game_ing;
const Ubuntu2Unity_GameReplayEnum Ubuntu2Unity::game_back;
const Ubuntu2Unity_GameReplayEnum Ubuntu2Unity::game_replay;
const Ubuntu2Unity_GameReplayEnum Ubuntu2Unity::game_pause;
const Ubuntu2Unity_GameReplayEnum Ubuntu2Unity::GameReplayEnum_MIN;
const Ubuntu2Unity_GameReplayEnum Ubuntu2Unity::GameReplayEnum_MAX;
const int Ubuntu2Unity::GameReplayEnum_ARRAYSIZE;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900
const ::google::protobuf::EnumDescriptor* Ubuntu2Unity_GameDeviceEnum_descriptor() {
  protobuf_SchulteGrid_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_SchulteGrid_2eproto::file_level_enum_descriptors[2];
}
bool Ubuntu2Unity_GameDeviceEnum_IsValid(int value) {
  switch (value) {
    case 0:
    case 1:
      return true;
    default:
      return false;
  }
}

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const Ubuntu2Unity_GameDeviceEnum Ubuntu2Unity::vr;
const Ubuntu2Unity_GameDeviceEnum Ubuntu2Unity::screen;
const Ubuntu2Unity_GameDeviceEnum Ubuntu2Unity::GameDeviceEnum_MIN;
const Ubuntu2Unity_GameDeviceEnum Ubuntu2Unity::GameDeviceEnum_MAX;
const int Ubuntu2Unity::GameDeviceEnum_ARRAYSIZE;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

// ===================================================================

void Unity2Ubuntu_Point::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int Unity2Ubuntu_Point::kXFieldNumber;
const int Unity2Ubuntu_Point::kYFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

Unity2Ubuntu_Point::Unity2Ubuntu_Point()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_SchulteGrid_2eproto::scc_info_Unity2Ubuntu_Point.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:SchulteGrid.Unity2Ubuntu.Point)
}
Unity2Ubuntu_Point::Unity2Ubuntu_Point(const Unity2Ubuntu_Point& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::memcpy(&x_, &from.x_,
    static_cast<size_t>(reinterpret_cast<char*>(&y_) -
    reinterpret_cast<char*>(&x_)) + sizeof(y_));
  // @@protoc_insertion_point(copy_constructor:SchulteGrid.Unity2Ubuntu.Point)
}

void Unity2Ubuntu_Point::SharedCtor() {
  ::memset(&x_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&y_) -
      reinterpret_cast<char*>(&x_)) + sizeof(y_));
}

Unity2Ubuntu_Point::~Unity2Ubuntu_Point() {
  // @@protoc_insertion_point(destructor:SchulteGrid.Unity2Ubuntu.Point)
  SharedDtor();
}

void Unity2Ubuntu_Point::SharedDtor() {
}

void Unity2Ubuntu_Point::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* Unity2Ubuntu_Point::descriptor() {
  ::protobuf_SchulteGrid_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_SchulteGrid_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const Unity2Ubuntu_Point& Unity2Ubuntu_Point::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_SchulteGrid_2eproto::scc_info_Unity2Ubuntu_Point.base);
  return *internal_default_instance();
}


void Unity2Ubuntu_Point::Clear() {
// @@protoc_insertion_point(message_clear_start:SchulteGrid.Unity2Ubuntu.Point)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  ::memset(&x_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&y_) -
      reinterpret_cast<char*>(&x_)) + sizeof(y_));
  _internal_metadata_.Clear();
}

bool Unity2Ubuntu_Point::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:SchulteGrid.Unity2Ubuntu.Point)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // float x = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(13u /* 13 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   float, ::google::protobuf::internal::WireFormatLite::TYPE_FLOAT>(
                 input, &x_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // float y = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(21u /* 21 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   float, ::google::protobuf::internal::WireFormatLite::TYPE_FLOAT>(
                 input, &y_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:SchulteGrid.Unity2Ubuntu.Point)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:SchulteGrid.Unity2Ubuntu.Point)
  return false;
#undef DO_
}

void Unity2Ubuntu_Point::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:SchulteGrid.Unity2Ubuntu.Point)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // float x = 1;
  if (this->x() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteFloat(1, this->x(), output);
  }

  // float y = 2;
  if (this->y() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteFloat(2, this->y(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:SchulteGrid.Unity2Ubuntu.Point)
}

::google::protobuf::uint8* Unity2Ubuntu_Point::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:SchulteGrid.Unity2Ubuntu.Point)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // float x = 1;
  if (this->x() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteFloatToArray(1, this->x(), target);
  }

  // float y = 2;
  if (this->y() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteFloatToArray(2, this->y(), target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:SchulteGrid.Unity2Ubuntu.Point)
  return target;
}

size_t Unity2Ubuntu_Point::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:SchulteGrid.Unity2Ubuntu.Point)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // float x = 1;
  if (this->x() != 0) {
    total_size += 1 + 4;
  }

  // float y = 2;
  if (this->y() != 0) {
    total_size += 1 + 4;
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void Unity2Ubuntu_Point::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:SchulteGrid.Unity2Ubuntu.Point)
  GOOGLE_DCHECK_NE(&from, this);
  const Unity2Ubuntu_Point* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const Unity2Ubuntu_Point>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:SchulteGrid.Unity2Ubuntu.Point)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:SchulteGrid.Unity2Ubuntu.Point)
    MergeFrom(*source);
  }
}

void Unity2Ubuntu_Point::MergeFrom(const Unity2Ubuntu_Point& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:SchulteGrid.Unity2Ubuntu.Point)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.x() != 0) {
    set_x(from.x());
  }
  if (from.y() != 0) {
    set_y(from.y());
  }
}

void Unity2Ubuntu_Point::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:SchulteGrid.Unity2Ubuntu.Point)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void Unity2Ubuntu_Point::CopyFrom(const Unity2Ubuntu_Point& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:SchulteGrid.Unity2Ubuntu.Point)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool Unity2Ubuntu_Point::IsInitialized() const {
  return true;
}

void Unity2Ubuntu_Point::Swap(Unity2Ubuntu_Point* other) {
  if (other == this) return;
  InternalSwap(other);
}
void Unity2Ubuntu_Point::InternalSwap(Unity2Ubuntu_Point* other) {
  using std::swap;
  swap(x_, other->x_);
  swap(y_, other->y_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata Unity2Ubuntu_Point::GetMetadata() const {
  protobuf_SchulteGrid_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_SchulteGrid_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void Unity2Ubuntu::InitAsDefaultInstance() {
  ::SchulteGrid::_Unity2Ubuntu_default_instance_._instance.get_mutable()->pointorigin_ = const_cast< ::SchulteGrid::Unity2Ubuntu_Point*>(
      ::SchulteGrid::Unity2Ubuntu_Point::internal_default_instance());
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int Unity2Ubuntu::kPointGridFieldNumber;
const int Unity2Ubuntu::kPointOriginFieldNumber;
const int Unity2Ubuntu::kBackNumFieldNumber;
const int Unity2Ubuntu::kIsFinishFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

Unity2Ubuntu::Unity2Ubuntu()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_SchulteGrid_2eproto::scc_info_Unity2Ubuntu.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:SchulteGrid.Unity2Ubuntu)
}
Unity2Ubuntu::Unity2Ubuntu(const Unity2Ubuntu& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      pointgrid_(from.pointgrid_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  if (from.has_pointorigin()) {
    pointorigin_ = new ::SchulteGrid::Unity2Ubuntu_Point(*from.pointorigin_);
  } else {
    pointorigin_ = NULL;
  }
  ::memcpy(&backnum_, &from.backnum_,
    static_cast<size_t>(reinterpret_cast<char*>(&isfinish_) -
    reinterpret_cast<char*>(&backnum_)) + sizeof(isfinish_));
  // @@protoc_insertion_point(copy_constructor:SchulteGrid.Unity2Ubuntu)
}

void Unity2Ubuntu::SharedCtor() {
  ::memset(&pointorigin_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&isfinish_) -
      reinterpret_cast<char*>(&pointorigin_)) + sizeof(isfinish_));
}

Unity2Ubuntu::~Unity2Ubuntu() {
  // @@protoc_insertion_point(destructor:SchulteGrid.Unity2Ubuntu)
  SharedDtor();
}

void Unity2Ubuntu::SharedDtor() {
  if (this != internal_default_instance()) delete pointorigin_;
}

void Unity2Ubuntu::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* Unity2Ubuntu::descriptor() {
  ::protobuf_SchulteGrid_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_SchulteGrid_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const Unity2Ubuntu& Unity2Ubuntu::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_SchulteGrid_2eproto::scc_info_Unity2Ubuntu.base);
  return *internal_default_instance();
}


void Unity2Ubuntu::Clear() {
// @@protoc_insertion_point(message_clear_start:SchulteGrid.Unity2Ubuntu)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  pointgrid_.Clear();
  if (GetArenaNoVirtual() == NULL && pointorigin_ != NULL) {
    delete pointorigin_;
  }
  pointorigin_ = NULL;
  ::memset(&backnum_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&isfinish_) -
      reinterpret_cast<char*>(&backnum_)) + sizeof(isfinish_));
  _internal_metadata_.Clear();
}

bool Unity2Ubuntu::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:SchulteGrid.Unity2Ubuntu)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // repeated .SchulteGrid.Unity2Ubuntu.Point PointGrid = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
                input, add_pointgrid()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .SchulteGrid.Unity2Ubuntu.Point PointOrigin = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(18u /* 18 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_pointorigin()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // int32 BackNum = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(24u /* 24 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &backnum_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // int32 IsFinish = 4;
      case 4: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(32u /* 32 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &isfinish_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:SchulteGrid.Unity2Ubuntu)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:SchulteGrid.Unity2Ubuntu)
  return false;
#undef DO_
}

void Unity2Ubuntu::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:SchulteGrid.Unity2Ubuntu)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // repeated .SchulteGrid.Unity2Ubuntu.Point PointGrid = 1;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->pointgrid_size()); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      1,
      this->pointgrid(static_cast<int>(i)),
      output);
  }

  // .SchulteGrid.Unity2Ubuntu.Point PointOrigin = 2;
  if (this->has_pointorigin()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      2, this->_internal_pointorigin(), output);
  }

  // int32 BackNum = 3;
  if (this->backnum() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(3, this->backnum(), output);
  }

  // int32 IsFinish = 4;
  if (this->isfinish() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(4, this->isfinish(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:SchulteGrid.Unity2Ubuntu)
}

::google::protobuf::uint8* Unity2Ubuntu::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:SchulteGrid.Unity2Ubuntu)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // repeated .SchulteGrid.Unity2Ubuntu.Point PointGrid = 1;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->pointgrid_size()); i < n; i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        1, this->pointgrid(static_cast<int>(i)), deterministic, target);
  }

  // .SchulteGrid.Unity2Ubuntu.Point PointOrigin = 2;
  if (this->has_pointorigin()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        2, this->_internal_pointorigin(), deterministic, target);
  }

  // int32 BackNum = 3;
  if (this->backnum() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(3, this->backnum(), target);
  }

  // int32 IsFinish = 4;
  if (this->isfinish() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(4, this->isfinish(), target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:SchulteGrid.Unity2Ubuntu)
  return target;
}

size_t Unity2Ubuntu::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:SchulteGrid.Unity2Ubuntu)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // repeated .SchulteGrid.Unity2Ubuntu.Point PointGrid = 1;
  {
    unsigned int count = static_cast<unsigned int>(this->pointgrid_size());
    total_size += 1UL * count;
    for (unsigned int i = 0; i < count; i++) {
      total_size +=
        ::google::protobuf::internal::WireFormatLite::MessageSize(
          this->pointgrid(static_cast<int>(i)));
    }
  }

  // .SchulteGrid.Unity2Ubuntu.Point PointOrigin = 2;
  if (this->has_pointorigin()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *pointorigin_);
  }

  // int32 BackNum = 3;
  if (this->backnum() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->backnum());
  }

  // int32 IsFinish = 4;
  if (this->isfinish() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->isfinish());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void Unity2Ubuntu::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:SchulteGrid.Unity2Ubuntu)
  GOOGLE_DCHECK_NE(&from, this);
  const Unity2Ubuntu* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const Unity2Ubuntu>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:SchulteGrid.Unity2Ubuntu)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:SchulteGrid.Unity2Ubuntu)
    MergeFrom(*source);
  }
}

void Unity2Ubuntu::MergeFrom(const Unity2Ubuntu& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:SchulteGrid.Unity2Ubuntu)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  pointgrid_.MergeFrom(from.pointgrid_);
  if (from.has_pointorigin()) {
    mutable_pointorigin()->::SchulteGrid::Unity2Ubuntu_Point::MergeFrom(from.pointorigin());
  }
  if (from.backnum() != 0) {
    set_backnum(from.backnum());
  }
  if (from.isfinish() != 0) {
    set_isfinish(from.isfinish());
  }
}

void Unity2Ubuntu::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:SchulteGrid.Unity2Ubuntu)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void Unity2Ubuntu::CopyFrom(const Unity2Ubuntu& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:SchulteGrid.Unity2Ubuntu)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool Unity2Ubuntu::IsInitialized() const {
  return true;
}

void Unity2Ubuntu::Swap(Unity2Ubuntu* other) {
  if (other == this) return;
  InternalSwap(other);
}
void Unity2Ubuntu::InternalSwap(Unity2Ubuntu* other) {
  using std::swap;
  CastToBase(&pointgrid_)->InternalSwap(CastToBase(&other->pointgrid_));
  swap(pointorigin_, other->pointorigin_);
  swap(backnum_, other->backnum_);
  swap(isfinish_, other->isfinish_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata Unity2Ubuntu::GetMetadata() const {
  protobuf_SchulteGrid_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_SchulteGrid_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void Ubuntu2Unity::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int Ubuntu2Unity::kTCPGestureFieldNumber;
const int Ubuntu2Unity::kGridSizeFieldNumber;
const int Ubuntu2Unity::kGameStateFieldNumber;
const int Ubuntu2Unity::kGameScoreFieldNumber;
const int Ubuntu2Unity::kGameReplayFieldNumber;
const int Ubuntu2Unity::kGameDeviceFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

Ubuntu2Unity::Ubuntu2Unity()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_SchulteGrid_2eproto::scc_info_Ubuntu2Unity.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:SchulteGrid.Ubuntu2Unity)
}
Ubuntu2Unity::Ubuntu2Unity(const Ubuntu2Unity& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      tcpgesture_(from.tcpgesture_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::memcpy(&gridsize_, &from.gridsize_,
    static_cast<size_t>(reinterpret_cast<char*>(&gamedevice_) -
    reinterpret_cast<char*>(&gridsize_)) + sizeof(gamedevice_));
  // @@protoc_insertion_point(copy_constructor:SchulteGrid.Ubuntu2Unity)
}

void Ubuntu2Unity::SharedCtor() {
  ::memset(&gridsize_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&gamedevice_) -
      reinterpret_cast<char*>(&gridsize_)) + sizeof(gamedevice_));
}

Ubuntu2Unity::~Ubuntu2Unity() {
  // @@protoc_insertion_point(destructor:SchulteGrid.Ubuntu2Unity)
  SharedDtor();
}

void Ubuntu2Unity::SharedDtor() {
}

void Ubuntu2Unity::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* Ubuntu2Unity::descriptor() {
  ::protobuf_SchulteGrid_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_SchulteGrid_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const Ubuntu2Unity& Ubuntu2Unity::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_SchulteGrid_2eproto::scc_info_Ubuntu2Unity.base);
  return *internal_default_instance();
}


void Ubuntu2Unity::Clear() {
// @@protoc_insertion_point(message_clear_start:SchulteGrid.Ubuntu2Unity)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  tcpgesture_.Clear();
  ::memset(&gridsize_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&gamedevice_) -
      reinterpret_cast<char*>(&gridsize_)) + sizeof(gamedevice_));
  _internal_metadata_.Clear();
}

bool Ubuntu2Unity::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:SchulteGrid.Ubuntu2Unity)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // repeated float TCPGesture = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPackedPrimitive<
                   float, ::google::protobuf::internal::WireFormatLite::TYPE_FLOAT>(
                 input, this->mutable_tcpgesture())));
        } else if (
            static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(13u /* 13 & 0xFF */)) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadRepeatedPrimitiveNoInline<
                   float, ::google::protobuf::internal::WireFormatLite::TYPE_FLOAT>(
                 1, 10u, input, this->mutable_tcpgesture())));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // int32 GridSize = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(16u /* 16 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &gridsize_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .SchulteGrid.Ubuntu2Unity.GameStateEnum GameState = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(24u /* 24 & 0xFF */)) {
          int value;
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   int, ::google::protobuf::internal::WireFormatLite::TYPE_ENUM>(
                 input, &value)));
          set_gamestate(static_cast< ::SchulteGrid::Ubuntu2Unity_GameStateEnum >(value));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // float GameScore = 4;
      case 4: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(37u /* 37 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   float, ::google::protobuf::internal::WireFormatLite::TYPE_FLOAT>(
                 input, &gamescore_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .SchulteGrid.Ubuntu2Unity.GameReplayEnum GameReplay = 5;
      case 5: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(40u /* 40 & 0xFF */)) {
          int value;
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   int, ::google::protobuf::internal::WireFormatLite::TYPE_ENUM>(
                 input, &value)));
          set_gamereplay(static_cast< ::SchulteGrid::Ubuntu2Unity_GameReplayEnum >(value));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .SchulteGrid.Ubuntu2Unity.GameDeviceEnum GameDevice = 6;
      case 6: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(48u /* 48 & 0xFF */)) {
          int value;
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   int, ::google::protobuf::internal::WireFormatLite::TYPE_ENUM>(
                 input, &value)));
          set_gamedevice(static_cast< ::SchulteGrid::Ubuntu2Unity_GameDeviceEnum >(value));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:SchulteGrid.Ubuntu2Unity)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:SchulteGrid.Ubuntu2Unity)
  return false;
#undef DO_
}

void Ubuntu2Unity::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:SchulteGrid.Ubuntu2Unity)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // repeated float TCPGesture = 1;
  if (this->tcpgesture_size() > 0) {
    ::google::protobuf::internal::WireFormatLite::WriteTag(1, ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED, output);
    output->WriteVarint32(static_cast< ::google::protobuf::uint32>(
        _tcpgesture_cached_byte_size_));
    ::google::protobuf::internal::WireFormatLite::WriteFloatArray(
      this->tcpgesture().data(), this->tcpgesture_size(), output);
  }

  // int32 GridSize = 2;
  if (this->gridsize() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(2, this->gridsize(), output);
  }

  // .SchulteGrid.Ubuntu2Unity.GameStateEnum GameState = 3;
  if (this->gamestate() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteEnum(
      3, this->gamestate(), output);
  }

  // float GameScore = 4;
  if (this->gamescore() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteFloat(4, this->gamescore(), output);
  }

  // .SchulteGrid.Ubuntu2Unity.GameReplayEnum GameReplay = 5;
  if (this->gamereplay() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteEnum(
      5, this->gamereplay(), output);
  }

  // .SchulteGrid.Ubuntu2Unity.GameDeviceEnum GameDevice = 6;
  if (this->gamedevice() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteEnum(
      6, this->gamedevice(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:SchulteGrid.Ubuntu2Unity)
}

::google::protobuf::uint8* Ubuntu2Unity::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:SchulteGrid.Ubuntu2Unity)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // repeated float TCPGesture = 1;
  if (this->tcpgesture_size() > 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteTagToArray(
      1,
      ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED,
      target);
    target = ::google::protobuf::io::CodedOutputStream::WriteVarint32ToArray(
        static_cast< ::google::protobuf::int32>(
            _tcpgesture_cached_byte_size_), target);
    target = ::google::protobuf::internal::WireFormatLite::
      WriteFloatNoTagToArray(this->tcpgesture_, target);
  }

  // int32 GridSize = 2;
  if (this->gridsize() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(2, this->gridsize(), target);
  }

  // .SchulteGrid.Ubuntu2Unity.GameStateEnum GameState = 3;
  if (this->gamestate() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteEnumToArray(
      3, this->gamestate(), target);
  }

  // float GameScore = 4;
  if (this->gamescore() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteFloatToArray(4, this->gamescore(), target);
  }

  // .SchulteGrid.Ubuntu2Unity.GameReplayEnum GameReplay = 5;
  if (this->gamereplay() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteEnumToArray(
      5, this->gamereplay(), target);
  }

  // .SchulteGrid.Ubuntu2Unity.GameDeviceEnum GameDevice = 6;
  if (this->gamedevice() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteEnumToArray(
      6, this->gamedevice(), target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:SchulteGrid.Ubuntu2Unity)
  return target;
}

size_t Ubuntu2Unity::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:SchulteGrid.Ubuntu2Unity)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // repeated float TCPGesture = 1;
  {
    unsigned int count = static_cast<unsigned int>(this->tcpgesture_size());
    size_t data_size = 4UL * count;
    if (data_size > 0) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
            static_cast< ::google::protobuf::int32>(data_size));
    }
    int cached_size = ::google::protobuf::internal::ToCachedSize(data_size);
    GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
    _tcpgesture_cached_byte_size_ = cached_size;
    GOOGLE_SAFE_CONCURRENT_WRITES_END();
    total_size += data_size;
  }

  // int32 GridSize = 2;
  if (this->gridsize() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->gridsize());
  }

  // .SchulteGrid.Ubuntu2Unity.GameStateEnum GameState = 3;
  if (this->gamestate() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::EnumSize(this->gamestate());
  }

  // float GameScore = 4;
  if (this->gamescore() != 0) {
    total_size += 1 + 4;
  }

  // .SchulteGrid.Ubuntu2Unity.GameReplayEnum GameReplay = 5;
  if (this->gamereplay() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::EnumSize(this->gamereplay());
  }

  // .SchulteGrid.Ubuntu2Unity.GameDeviceEnum GameDevice = 6;
  if (this->gamedevice() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::EnumSize(this->gamedevice());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void Ubuntu2Unity::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:SchulteGrid.Ubuntu2Unity)
  GOOGLE_DCHECK_NE(&from, this);
  const Ubuntu2Unity* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const Ubuntu2Unity>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:SchulteGrid.Ubuntu2Unity)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:SchulteGrid.Ubuntu2Unity)
    MergeFrom(*source);
  }
}

void Ubuntu2Unity::MergeFrom(const Ubuntu2Unity& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:SchulteGrid.Ubuntu2Unity)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  tcpgesture_.MergeFrom(from.tcpgesture_);
  if (from.gridsize() != 0) {
    set_gridsize(from.gridsize());
  }
  if (from.gamestate() != 0) {
    set_gamestate(from.gamestate());
  }
  if (from.gamescore() != 0) {
    set_gamescore(from.gamescore());
  }
  if (from.gamereplay() != 0) {
    set_gamereplay(from.gamereplay());
  }
  if (from.gamedevice() != 0) {
    set_gamedevice(from.gamedevice());
  }
}

void Ubuntu2Unity::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:SchulteGrid.Ubuntu2Unity)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void Ubuntu2Unity::CopyFrom(const Ubuntu2Unity& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:SchulteGrid.Ubuntu2Unity)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool Ubuntu2Unity::IsInitialized() const {
  return true;
}

void Ubuntu2Unity::Swap(Ubuntu2Unity* other) {
  if (other == this) return;
  InternalSwap(other);
}
void Ubuntu2Unity::InternalSwap(Ubuntu2Unity* other) {
  using std::swap;
  tcpgesture_.InternalSwap(&other->tcpgesture_);
  swap(gridsize_, other->gridsize_);
  swap(gamestate_, other->gamestate_);
  swap(gamescore_, other->gamescore_);
  swap(gamereplay_, other->gamereplay_);
  swap(gamedevice_, other->gamedevice_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata Ubuntu2Unity::GetMetadata() const {
  protobuf_SchulteGrid_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_SchulteGrid_2eproto::file_level_metadata[kIndexInFileMessages];
}


// @@protoc_insertion_point(namespace_scope)
}  // namespace SchulteGrid
namespace google {
namespace protobuf {
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::SchulteGrid::Unity2Ubuntu_Point* Arena::CreateMaybeMessage< ::SchulteGrid::Unity2Ubuntu_Point >(Arena* arena) {
  return Arena::CreateInternal< ::SchulteGrid::Unity2Ubuntu_Point >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::SchulteGrid::Unity2Ubuntu* Arena::CreateMaybeMessage< ::SchulteGrid::Unity2Ubuntu >(Arena* arena) {
  return Arena::CreateInternal< ::SchulteGrid::Unity2Ubuntu >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::SchulteGrid::Ubuntu2Unity* Arena::CreateMaybeMessage< ::SchulteGrid::Ubuntu2Unity >(Arena* arena) {
  return Arena::CreateInternal< ::SchulteGrid::Ubuntu2Unity >(arena);
}
}  // namespace protobuf
}  // namespace google

// @@protoc_insertion_point(global_scope)
